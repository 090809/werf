// Code generated by "esc -no-compress -ignore static.go -o ansible/static.go -pkg ansible ansible"; DO NOT EDIT.

package ansible

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/ansible/crypt.py": {
		name:    "crypt.py",
		local:   "ansible/crypt.py",
		size:    45,
		modtime: 1550039210,
		compressed: `
H4sIAAAAAAAA/wAtANL/ZGVmIGNyeXB0KHdvcmQsIHNhbHQpOgogIHJldHVybiAiRkFLRV9DUllQVCIK
AQAA///ZwIS+LQAAAA==
`,
	},

	"/ansible/live.py": {
		name:    "live.py",
		local:   "ansible/live.py",
		size:    16993,
		modtime: 1550039495,
		compressed: `
H4sIAAAAAAAA/wBhQp69IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KIyAoYykgMjAxMi0yMDE0LCBNaWNo
YWVsIERlSGFhbiA8bWljaGFlbC5kZWhhYW5AZ21haWwuY29tPgojIChjKSAyMDE3IEFuc2libGUgUHJv
amVjdAojIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHYzLjArIChzZWUgQ09QWUlORyBvciBodHRw
czovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC0zLjAudHh0KQoKIyBNYWtlIGNvZGluZyBtb3JlIHB5
dGhvbjMtaXNoCmZyb20gX19mdXR1cmVfXyBpbXBvcnQgKGFic29sdXRlX2ltcG9ydCwgZGl2aXNpb24s
IHByaW50X2Z1bmN0aW9uKQpfX21ldGFjbGFzc19fID0gdHlwZQoKRE9DVU1FTlRBVElPTiA9ICcnJwog
ICAgY2FsbGJhY2s6IGxpdmUKICAgIHR5cGU6IHN0ZG91dAogICAgc2hvcnRfZGVzY3JpcHRpb246IHNj
cmVlbiBvdXRwdXQgZm9yIHNvbG8gbW9kZQogICAgdmVyc2lvbl9hZGRlZDogaGlzdG9yaWNhbAogICAg
ZGVzY3JpcHRpb246CiAgICAgICAgLSBTb2xvIG1vZGUgd2l0aCBsaXZlIHN0ZG91dCBmb3IgcmF3IGFu
ZCBzY3JpcHQgdGFza3Mgd2l0aCBmYWxsYmFjayB0byBtaW5pbWFsCicnJwoKZnJvbSBhbnNpYmxlLnBs
dWdpbnMuY2FsbGJhY2sgaW1wb3J0IENhbGxiYWNrQmFzZQpmcm9tIGFuc2libGUgaW1wb3J0IGNvbnN0
YW50cyBhcyBDCmZyb20gYW5zaWJsZS52YXJzLm1hbmFnZXIgaW1wb3J0IHN0cmlwX2ludGVybmFsX2tl
eXMKCmltcG9ydCBqc29uLCByZQpmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBJdGVyYWJsZQpmcm9tIGRh
dGV0aW1lIGltcG9ydCBkYXRldGltZQoKCmNsYXNzIENhbGxiYWNrTW9kdWxlKENhbGxiYWNrQmFzZSk6
CgogICAgJycnCiAgICBUaGlzIGlzIHRoZSBkZWZhdWx0IGNhbGxiYWNrIGludGVyZmFjZSwgd2hpY2gg
c2ltcGx5IHByaW50cyBtZXNzYWdlcwogICAgdG8gc3Rkb3V0IHdoZW4gbmV3IGNhbGxiYWNrIGV2ZW50
cyBhcmUgcmVjZWl2ZWQuCiAgICAnJycKCiAgICBDQUxMQkFDS19WRVJTSU9OID0gMi4wCiAgICBDQUxM
QkFDS19UWVBFID0gJ3N0ZG91dCcKICAgIENBTExCQUNLX05BTUUgPSAnbGl2ZScKCiAgICBIRUFERVJf
UExBQ0VIT0xERVIgPSAnLi4uJwogICAgSEVBREVSX05BTUVfSU5GT19MRU4gPSA1NQogICAgSEVBREVS
X0lORk9fTUlOX0xFTiA9IDUgKyAzICsgNSAjIDUgbGV0dGVycyBmcm9tIHRoZSBlZGdlcyBhbmQgYSBw
bGFjZWhvbGRlciBsZW5ndGgKCgogICAgIyBuYW1lIGZvciB0aGlzIHRhc2tzIGNhbiBiZSBnZW5lcmF0
ZWQgZnJvbSBmcmVlX2Zvcm0KICAgIEZSRUVfRk9STV9NT0RVTEVTID0gKCdyYXcnLCAnc2NyaXB0Jywg
J2NvbW1hbmQnLCAnc2hlbGwnKQogICAgIyB0aGlzIG1vZHVsZXMgYXJlIHRlc3RlZCBhbmQgd2UgY2Fu
IGdldCBhZGRpdGlvbmFsIGluZm8gZnJvbSB0aGVtCiAgICBLTk9XTl9SRVNVTFRfTU9EVUxFUyA9ICgn
dXNlcicsICdncm91cCcsICdhcHQnLCAnY29weScsICdnZXRfdXJsJywgJ2ZpbGUnKQoKICAgICNFUlJP
UiEgdGhpcyB0YXNrICdkZWJ1ZycgaGFzIGV4dHJhIHBhcmFtcywgd2hpY2ggaXMgb25seSBhbGxvd2Vk
IGluIHRoZSBmb2xsb3dpbmcgbW9kdWxlczogY29tbWFuZCwgd2luX2NvbW1hbmQsIHNoZWxsLCB3aW5f
c2hlbGwsIHNjcmlwdCwgaW5jbHVkZSwgaW5jbHVkZV92YXJzLCBpbmNsdWRlX3Rhc2tzLCBpbmNsdWRl
X3JvbGUsIGltcG9ydF90YXNrcywgaW1wb3J0X3JvbGUsIGFkZF9ob3N0LCBncm91cF9ieSwgc2V0X2Zh
Y3QsIHJhdywgbWV0YQoKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcihDYWxsYmFj
a01vZHVsZSwgc2VsZikuX19pbml0X18oKQogICAgICAgIHNlbGYuX3BsYXkgPSBOb25lCiAgICAgICAg
IyB0aW1lCiAgICAgICAgc2VsZi5fdGFza19zdGFydGVkPU5vbmUKICAgICAgICBzZWxmLl9wbGF5X3N0
YXJ0ZWQ9Tm9uZQogICAgICAgIHNlbGYuX2l0ZW1fZG9uZT1Ob25lCgogICAgIyBhY3Rpb24obW9kdWxl
IG5hbWUpCiAgICAjIGFjdGlvbihtb2R1bGUgbmFtZSkgJ3Rhc2sgbmFtZScKICAgICMgYWN0aW9uKG1v
ZHVsZSBuYW1lKSAndGFzayBuYW1lJyBbc2lnbmlmaWNhbnQgYXJnXQoKICAgICMgICAgaWYgSEVBREVS
X05BTUVfSU5GT19MRU4gLSBsZW4odGFza05hbWUpID49IHNwYWNlICsgYnJhY2tldCArIDUgbGVmdCBs
ZXR0ZXJzICsgLi4uICsgNSByaWdodCBsZXR0ZXJzICsgYnJhY2tldAogICAgIyBvciBpZiBIRUFERVJf
TkFNRV9JTkZPX0xFTiAtIGxlbih0YXNrTmFtZSkgPj0gSEVBREVSX0lORk9fTUlOX0xFTiArIDMgLSBs
ZW4oaW5mbykKICAgICMgdGhlbiBhZGQgaW5mbyBvciBzcXVhc2hlZCBmcm9tIGNlbnRlciBpbmZvCiAg
ICBkZWYgX3Rhc2tfaGVhZGVyKHNlbGYsIHRhc2ssIG1zZywgc3RhcnQ9RmFsc2UpOgogICAgICAgIHRh
c2tOYW1lID0gcmUuc3ViKHInXHMrJywgcicgJywgdGFzay5uYW1lKQogICAgICAgIGluZm8gPSBzZWxm
Ll9nZXRfdGFza19pbmZvX2Zyb21fYXJncyh0YXNrLCBzdGFydCkgb3IgJycKCiAgICAgICAgaWYgaW5m
byAhPSAnJzoKICAgICAgICAgICAgaW5mb1NwYWNlID0gc2VsZi5IRUFERVJfTkFNRV9JTkZPX0xFTiAt
IGxlbih0YXNrTmFtZSkKICAgICAgICAgICAgc2VsZi5fZGlzcGxheS52KCJpbmZvU3BhY2U9JWQiICUg
aW5mb1NwYWNlKQogICAgICAgICAgICBpZiBpbmZvU3BhY2UgPj0gc2VsZi5IRUFERVJfSU5GT19NSU5f
TEVOIG9yIGluZm9TcGFjZSA+PSBsZW4oaW5mbyk6CiAgICAgICAgICAgICAgICBpbmZvID0gJyBbJXNd
JyAlIHNlbGYuX3NxdWFzaF9jZW50ZXIoaW5mbywgaW5mb1NwYWNlLTMpCiAgICAgICAgICAgIGVsc2U6
CiAgICAgICAgICAgICAgICBpbmZvID0gJycKCgogICAgICAgIGlmIHRhc2tOYW1lICE9ICcnOgogICAg
ICAgICAgICBpZiBsZW4odGFza05hbWUpK2xlbihpbmZvKSA+IHNlbGYuSEVBREVSX05BTUVfSU5GT19M
RU46CiAgICAgICAgICAgICAgICB0YXNrTmFtZSA9IHNlbGYuX3NxdWFzaF9yaWdodCh0YXNrTmFtZSwg
c2VsZi5IRUFERVJfTkFNRV9JTkZPX0xFTi1sZW4oaW5mbykpCiAgICAgICAgICAgIHRhc2tOYW1lID0g
IiAnJXMnIiAlIHRhc2tOYW1lCgogICAgICAgIHJldHVybiB1JyVzJXMlcyAlcycgJSAodGFzay5hY3Rp
b24sIHRhc2tOYW1lLCBpbmZvLCBtc2cpCgogICAgZGVmIF9pdGVtX2hlYWRlcihzZWxmLCB0YXNrLCBp
dGVtX25hbWUsIG1zZyk6CiAgICAgICAgbXNnID0gdSd8IEl0ZW0gJXMgfCAlcycgJSAoaXRlbV9uYW1l
LCBtc2cpCiAgICAgICAgcmV0dXJuIHNlbGYuX3Rhc2tfaGVhZGVyKHRhc2ssIG1zZykKCgogICAgZGVm
IF9nZXRfdGFza19pbmZvX2Zyb21fYXJncyhzZWxmLCB0YXNrLCBzdGFydD1GYWxzZSk6CiAgICAgICAg
aW5mbyA9ICcnCiAgICAgICAgaWYgdGFzay5hY3Rpb24gaW4gc2VsZi5GUkVFX0ZPUk1fTU9EVUxFUzoK
ICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5nZXQoJ19yYXdfcGFyYW1zJywgJycpCiAgICAgICAg
aWYgdGFzay5hY3Rpb24gPT0gJ2ZpbGUnOgogICAgICAgICAgICBpbmZvID0gdGFzay5hcmdzLmdldCgn
cGF0aCcsJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2NvcHknOgogICAgICAgICAgICBpbmZv
ID0gdGFzay5hcmdzLmdldCgnZGVzdCcsJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2dyb3Vw
JzoKICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5nZXQoJ25hbWUnLCcnKQogICAgICAgIGlmIHRh
c2suYWN0aW9uID09ICd1c2VyJzoKICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5nZXQoJ25hbWUn
LCcnKQogICAgICAgIGlmIHRhc2suYWN0aW9uID09ICdnZXRfdXJsJzoKICAgICAgICAgICAgaW5mbyA9
IHRhc2suYXJncy5nZXQoJ3VybCcsJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2dldGVudCc6
CiAgICAgICAgICAgIGRiID0gdGFzay5hcmdzLmdldCgnZGF0YWJhc2UnLCcnKQogICAgICAgICAgICBr
ZXkgPSB0YXNrLmFyZ3MuZ2V0KCdrZXknLCcnKQogICAgICAgICAgICBpbmZvID0gJyVzICVzJyAlIChk
Yiwga2V5KQogICAgICAgIGlmIHRhc2suYWN0aW9uID09ICdhcGsnOgogICAgICAgICAgICBpbmZvID0g
dGFzay5hcmdzLmdldCgnbmFtZScsICcnKQogICAgICAgIGlmIHRhc2suYWN0aW9uID09ICdhcHQnOgog
ICAgICAgICAgICBpbmZvMSA9IHRhc2suYXJncy5nZXQoJ25hbWUnLCBOb25lKQogICAgICAgICAgICBp
bmZvMiA9IHRhc2suYXJncy5nZXQoJ3BhY2thZ2UnLCBOb25lKQogICAgICAgICAgICBpbmZvMyA9IHRh
c2suYXJncy5nZXQoJ3BrZycsIE5vbmUpCiAgICAgICAgICAgIGluZm8gPSAnLCAnLmpvaW4obGlzdChz
ZWxmLl9mbGF0dGVuKFtpbmZvMSwgaW5mbzIsIGluZm8zXSkpKQogICAgICAgIGlmIHRhc2suYWN0aW9u
ID09ICdhcHRfcmVwb3NpdG9yeSc6CiAgICAgICAgICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCdyZXBv
JywgJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2FwdF9rZXknOgogICAgICAgICAgICBpbmZv
ID0gdGFzay5hcmdzLmdldCgnaWQnLCAnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9PSAndW5hcmNo
aXZlJzoKICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5nZXQoJ3NyYycsICcnKQogICAgICAgIGlm
IHRhc2suYWN0aW9uID09ICdsb2NhbGVfZ2VuJzoKICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5n
ZXQoJ25hbWUnLCAnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9PSAnbGluZWluZmlsZSc6CiAgICAg
ICAgICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCdwYXRoJywgJycpCiAgICAgICAgaWYgdGFzay5hY3Rp
b24gPT0gJ2Jsb2NraW5maWxlJzoKICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5nZXQoJ3BhdGgn
LCAnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9PSAnY29tcG9zZXInOgogICAgICAgICAgICBpbmZv
ID0gdGFzay5hcmdzLmdldCgnY29tbWFuZCcsICdpbnN0YWxsJykKCglpZiB0YXNrLmxvb3AgYW5kIHN0
YXJ0OgogICAgICAgICAgICBsb29wX2FyZ3MgPSB0YXNrLmxvb3BfYXJncwogICAgICAgICAgICBpZiBs
ZW4obG9vcF9hcmdzKSA+IDA6CiAgICAgICAgICAgICAgICAgaW5mbyA9ICInJXMnIG92ZXIgJXMiICUg
KGluZm8sICcsICcuam9pbihsb29wX2FyZ3MpKQogICAgICAgIHJldHVybiBpbmZvCgoKICAgIGRlZiBf
c3F1YXNoX2NlbnRlcihzZWxmLCBzLCBsLCBwbGFjZWhvbGRlcj0nLi4uJyk6CiAgICAgICAgcGwgPSBs
ZW4ocGxhY2Vob2xkZXIpCiAgICAgICAgc2VsZi5fZGlzcGxheS52KCIgIGxlbihzKT0lZCBsPSVkIHBs
PSVkIiAlIChsZW4ocyksIGwsIHBsKSkKCiAgICAgICAgaWYgbGVuKHMpID4gbDoKICAgICAgICAgICAg
IyBlZGdlIGxlbmd0aCBvZiBzIHRvIGRpc3BsYXkKICAgICAgICAgICAgc3AgPSBpbnQoKGwgLSBwbCkv
MikKICAgICAgICAgICAgc2VsZi5fZGlzcGxheS52KCIgIHNwPSVkIiAlIHNwKQogICAgICAgICAgICBy
ZXR1cm4gdSclcyVzJXMnICUgKHNbMDpzcF0sIHBsYWNlaG9sZGVyLCBzW2xlbihzKS1zcC0xKyhsJTIp
Ol0pCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHMKCiAgICBkZWYgX3NxdWFzaF9yaWdo
dChzZWxmLCBzLCBsLCBwbGFjZWhvbGRlcj0nLi4uJyk6CiAgICAgICAgcGwgPSBsZW4ocGxhY2Vob2xk
ZXIpCiAgICAgICAgaWYgbGVuKHMpID4gbDoKICAgICAgICAgICAgcmV0dXJuIHUnJXMlcycgJSAoc1sw
OmwtcGxdLCBwbGFjZWhvbGRlcikKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gcwoKICAg
IGRlZiBfZmxhdHRlbihzZWxmLCBsKToKCSIiIllpZWxkIGl0ZW1zIGZyb20gYW55IG5lc3RlZCBpdGVy
YWJsZTsgc2VlIFJlZmVyZW5jZS4iIiIKICAgICAgICBpZiBpc2luc3RhbmNlKGwsICh1bmljb2RlLCBz
dHIsIGJ5dGVzKSk6CiAgICAgICAgICAgIHlpZWxkIGwKICAgICAgICAgICAgcmV0dXJuCglmb3IgeCBp
biBsOgogICAgICAgICAgICBzZWxmLl9kaXNwbGF5LnYoJ2ZsYXR0ZW4gJXMnICUgeCkKICAgICAgICAg
ICAgaWYgbm90IHg6CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICBpZiBpc2luc3Rh
bmNlKHgsIEl0ZXJhYmxlKSBhbmQgbm90IGlzaW5zdGFuY2UoeCwgKHVuaWNvZGUsIHN0ciwgYnl0ZXMp
KToKICAgICAgICAgICAgICAgIGZvciBzdWJfeCBpbiBzZWxmLl9mbGF0dGVuKHgpOgogICAgICAgICAg
ICAgICAgICAgIHlpZWxkIHN1Yl94CiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICB5aWVs
ZCB4CgogICAgZGVmIF9kaXNwbGF5X21zZyhzZWxmLCB0YXNrLCByZXN1bHQsIGNhcHRpb24sIGNvbG9y
KToKICAgICAgICAjIHByZXZlbnQgZHVibGljYXRpb24gaW4gY2FzZSBvZiBsaXZlX3N0ZG91dAogICAg
ICAgIGlmIG5vdCByZXN1bHQuZ2V0KCdsaXZlX3N0ZG91dCcsIEZhbHNlKToKICAgICAgICAgICAgc3Rk
b3V0ID0gcmVzdWx0LmdldCgnc3Rkb3V0JywgTm9uZSkKICAgICAgICAgICAgaWYgc3Rkb3V0OgogICAg
ICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheSgic3Rkb3V0OiIsIGNvbG9yPUMuQ09MT1JfSElH
SExJR0hUKQogICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheShzdGRvdXQpCiAgICAgICAg
ICAgIHN0ZGVyciA9IHJlc3VsdC5nZXQoJ3N0ZGVycicsICcnKQogICAgICAgICAgICBpZiBzdGRlcnI6
CiAgICAgICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoInN0ZGVycjoiLCBjb2xvcj1DLkNP
TE9SX0hJR0hMSUdIVCkKICAgICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheShzdGRlcnIs
IGNvbG9yPUMuQ09MT1JfRVJST1IpCgojICAgICAgICBpZiB0YXNrLmxvb3AgYW5kICdyZXN1bHRzJyBp
biByZXN1bHQ6CiMgICAgICAgICAgICByZXN1bHRzID0gcmVzdWx0WydyZXN1bHRzJ10KIyAgICAgICAg
ICAgIGlmIGxlbihyZXN1bHRzKSA+IDA6CiMgICAgICAgICAgICAgICAgZm9yIHJlcyBpbiByZXN1bHRz
OgojICAgICAgICAgICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoIkl0ZW06ICVzIiAlIHJl
cy5nZXQoJ2l0ZW0nLCcnKSwgY29sb3I9Qy5DT0xPUl9ISUdITElHSFQpCiMJCSAgICBpZiBub3QgcmVz
LmdldCgnbGl2ZV9zdGRvdXQnLCBGYWxzZSk6CiMJCQlzdGRvdXQgPSByZXMuZ2V0KCdzdGRvdXQnLCBO
b25lKQojCQkJaWYgc3Rkb3V0OgojCQkJICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoInN0ZG91dDoiLCBj
b2xvcj1DLkNPTE9SX0hJR0hMSUdIVCkKIwkJCSAgc2VsZi5fZGlzcGxheS5kaXNwbGF5KHN0ZG91dCkK
IwkJCXN0ZGVyciA9IHJlcy5nZXQoJ3N0ZGVycicsICcnKQojCQkJaWYgc3RkZXJyOgojCQkJICAgIHNl
bGYuX2Rpc3BsYXkuZGlzcGxheSgic3RkZXJyOiIsIGNvbG9yPUMuQ09MT1JfSElHSExJR0hUKQojCQkJ
ICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheShzdGRlcnIsIGNvbG9yPUMuQ09MT1JfRVJST1IpCiMJCSAg
ICBpZiAnbXNnJyBpbiByZXM6CiMJCQlzZWxmLl9kaXNwbGF5LmRpc3BsYXkocmVzWydtc2cnXSwgY29s
b3IpCiMKIwkJICAgIGlmICdyYycgaW4gcmVzOgojCQkJZXhpdENvZGUgPSByZXNbJ3JjJ10KIwkJCWV4
aXRDb2xvciA9IEMuQ09MT1JfT0sKIwkJCWlmIGV4aXRDb2RlICE9ICcwJzoKIwkJCSAgICBleGl0Q29s
b3IgPSBDLkNPTE9SX0VSUk9SCiMKIwkJCXNlbGYuX2Rpc3BsYXkuZGlzcGxheSgnRXhpdCBjb2RlOiAl
cycgJSBleGl0Q29kZSwgZXhpdENvbG9yKQoKICAgICAgICBpZiAnbXNnJyBpbiByZXN1bHQ6CiAgICAg
ICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheShyZXN1bHRbJ21zZyddLCBjb2xvcikKCiAgICAgICAg
aWYgJ3JjJyBpbiByZXN1bHQ6CiAgICAgICAgICAgIGV4aXRDb2RlID0gcmVzdWx0WydyYyddCiAgICAg
ICAgICAgIGV4aXRDb2xvciA9IEMuQ09MT1JfT0sKICAgICAgICAgICAgaWYgZXhpdENvZGUgIT0gJzAn
OgogICAgICAgICAgICAgICAgZXhpdENvbG9yID0gQy5DT0xPUl9FUlJPUgoKICAgICAgICAgICAgc2Vs
Zi5fZGlzcGxheS5kaXNwbGF5KCdFeGl0IGNvZGU6ICVzJyAlIGV4aXRDb2RlLCBleGl0Q29sb3IpCgog
ICAgICAgIGlmICdpdGVtJyBpbiByZXN1bHQ6CiAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxh
eShzZWxmLl9pdGVtX2hlYWRlcih0YXNrLCByZXN1bHRbJ2l0ZW0nXSwgY2FwdGlvbiksIGNvbG9yKQog
ICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheShzZWxmLl90YXNrX2hl
YWRlcih0YXNrLCBjYXB0aW9uKSwgY29sb3IpCgogICAgZGVmIF9kaXNwbGF5X2NvbW1hbmRfZ2VuZXJp
Y19tc2coc2VsZiwgdGFzaywgcmVzdWx0LCBjYXB0aW9uLCBjb2xvcik6CiAgICAgICAgJycnIG91dHB1
dCB0aGUgcmVzdWx0IG9mIGEgY29tbWFuZCBydW4gJycnCgogICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlz
cGxheSgiJXMgfCBleGl0IGNvZGUgJXMgPj4iICUgKHNlbGYuX3Rhc2tfaGVhZGVyKHRhc2ssIGNhcHRp
b24pLCByZXN1bHQuZ2V0KCdyYycsIC0xKSksIGNvbG9yKQogICAgICAgIG1zZyA9IHJlc3VsdC5nZXQo
J21zZycpCiAgICAgICAgaWYgbXNnOgogICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkobXNn
LCBjb2xvcikKICAgICAgICAjIHByZXZlbnQgZHVibGljYXRpb24gaW4gY2FzZSBvZiBsaXZlX3N0ZG91
dAogICAgICAgIGlmIG5vdCByZXN1bHQuZ2V0KCdsaXZlX3N0ZG91dCcsIEZhbHNlKToKICAgICAgICAg
ICAgc3Rkb3V0ID0gcmVzdWx0LmdldCgnc3Rkb3V0JywgTm9uZSkKICAgICAgICAgICAgaWYgc3Rkb3V0
OgogICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheSgic3Rkb3V0IHdhczoiLCBjb2xvcj1D
LkNPTE9SX0hJR0hMSUdIVCkKICAgICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoc3Rkb3V0
KQogICAgICAgIHN0ZGVyciA9IHJlc3VsdC5nZXQoJ3N0ZGVycicsICcnKQogICAgICAgIGlmIHN0ZGVy
cjoKICAgICAgICAgICAgc2VsZi5fZGlzcGxheS5kaXNwbGF5KCJzdGRlcnIgd2FzOiIsIGNvbG9yPUMu
Q09MT1JfSElHSExJR0hUKQogICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoc3RkZXJyLCBj
b2xvcj1DLkNPTE9SX0VSUk9SKQoKCiAgICBkZWYgX2Rpc3BsYXlfZGVidWdfbXNnKHNlbGYsIHRhc2ss
IHJlc3VsdCk6CiAgICAgICAgI2lmIChzZWxmLl9kaXNwbGF5LnZlcmJvc2l0eSA+IDAgb3IgJ19hbnNp
YmxlX3ZlcmJvc2VfYWx3YXlzJyBpbiByZXN1bHQpIGFuZCAnX2Fuc2libGVfdmVyYm9zZV9vdmVycmlk
ZScgbm90IGluIHJlc3VsdDoKICAgICAgICBjb2xvciA9IEMuQ09MT1JfT0sKICAgICAgICBpZiB0YXNr
LmFyZ3MuZ2V0KCdtc2cnKToKICAgICAgICAgICAgc2VsZi5fZGlzcGxheS5kaXNwbGF5KCJkZWJ1ZyBt
c2ciLCBjb2xvcj1DLkNPTE9SX0hJR0hMSUdIVCkKICAgICAgICAgICAgc2VsZi5fZGlzcGxheS5kaXNw
bGF5KHJlc3VsdC5nZXQoJ21zZycsICcnKSwgY29sb3IpCiAgICAgICAgaWYgdGFzay5hcmdzLmdldCgn
dmFyJyk6CiAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheSgiZGVidWcgdmFyIFwnJXNcJyIg
JSB0YXNrLmFyZ3MuZ2V0KCd2YXInKSwgY29sb3I9Qy5DT0xPUl9ISUdITElHSFQpCiAgICAgICAgICAg
IHZhcl9vYmogPSByZXN1bHQuZ2V0KHRhc2suYXJncy5nZXQoJ3ZhcicpLCAnJykKICAgICAgICAgICAg
aWYgaXNpbnN0YW5jZSh2YXJfb2JqLCBzdHIpOgogICAgICAgICAgICAgICAgaWYgJ0lTIE5PVCBERUZJ
TkVEJyBpbiB2YXJfb2JqOgogICAgICAgICAgICAgICAgICAgIGNvbG9yID0gQy5DT0xPUl9FUlJPUgog
ICAgICAgICAgICAgICAgICAgIHBhdGggPSB0YXNrLmdldF9wYXRoKCkKICAgICAgICAgICAgICAgICAg
ICBpZiBwYXRoOgogICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkodSJ0
YXNrIHBhdGg6ICVzIiAlIHBhdGgsIGNvbG9yPUMuQ09MT1JfREVCVUcpCiAgICAgICAgICAgICAgICBz
ZWxmLl9kaXNwbGF5LmRpc3BsYXkodmFyX29iaiwgY29sb3IpCiAgICAgICAgICAgIGVsc2U6CiAgICAg
ICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoanNvbi5kdW1wcyh2YXJfb2JqLCBpbmRlbnQ9
NCksIGNvbG9yKQoKICAgICMgVE9ETyByZW1vdmUgc3Rkb3V0IGhlcmUgaWYgbGl2ZV9zdGRvdXQhCiAg
ICAjIFRPRE8gaGFuZGxlIHJlc3VsdHMgZm9yIGxvb3BlZCB0YXNrcwogICAgZGVmIF9kdW1wX3Jlc3Vs
dHMoc2VsZiwgcmVzdWx0LCBpbmRlbnQ9Tm9uZSwgc29ydF9rZXlzPVRydWUsIGtlZXBfaW52b2NhdGlv
bj1GYWxzZSk6CgogICAgICAgIGlmIG5vdCBpbmRlbnQgYW5kIChyZXN1bHQuZ2V0KCdfYW5zaWJsZV92
ZXJib3NlX2Fsd2F5cycpIG9yIHNlbGYuX2Rpc3BsYXkudmVyYm9zaXR5ID4gMik6CiAgICAgICAgICAg
IGluZGVudCA9IDQKCiAgICAgICAgIyBBbGwgcmVzdWx0IGtleXMgc3RhdGluZyB3aXRoIF9hbnNpYmxl
XyBhcmUgaW50ZXJuYWwsIHNvIHJlbW92ZSB0aGVtIGZyb20gdGhlIHJlc3VsdCBiZWZvcmUgd2Ugb3V0
cHV0IGFueXRoaW5nLgogICAgICAgIGFicmlkZ2VkX3Jlc3VsdCA9IHN0cmlwX2ludGVybmFsX2tleXMo
cmVzdWx0KQoKICAgICAgICAjIHJlbW92ZSBpbnZvY2F0aW9uIHVubGVzcyBzcGVjaWZpY2FsbHkgd2Fu
dGluZyBpdAogICAgICAgIGlmIG5vdCBrZWVwX2ludm9jYXRpb24gYW5kIHNlbGYuX2Rpc3BsYXkudmVy
Ym9zaXR5IDwgMyBhbmQgJ2ludm9jYXRpb24nIGluIHJlc3VsdDoKICAgICAgICAgICAgZGVsIGFicmlk
Z2VkX3Jlc3VsdFsnaW52b2NhdGlvbiddCgogICAgICAgICMgcmVtb3ZlIGRpZmYgaW5mb3JtYXRpb24g
ZnJvbSBzY3JlZW4gb3V0cHV0CiAgICAgICAgaWYgc2VsZi5fZGlzcGxheS52ZXJib3NpdHkgPCAzIGFu
ZCAnZGlmZicgaW4gcmVzdWx0OgogICAgICAgICAgICBkZWwgYWJyaWRnZWRfcmVzdWx0WydkaWZmJ10K
CiAgICAgICAgIyByZW1vdmUgZXhjZXB0aW9uIGZyb20gc2NyZWVuIG91dHB1dAogICAgICAgIGlmICdl
eGNlcHRpb24nIGluIGFicmlkZ2VkX3Jlc3VsdDoKICAgICAgICAgICAgZGVsIGFicmlkZ2VkX3Jlc3Vs
dFsnZXhjZXB0aW9uJ10KCiAgICAgICAgIyByZW1vdmUgbXNnLCBmYWlsZWQsIGNoYW5nZWQKICMgICAg
ICAgaWYgJ21zZycgaW4gYWJyaWRnZWRfcmVzdWx0OgogIyAgICAgICAgICAgZGVsIGFicmlkZ2VkX3Jl
c3VsdFsnbXNnJ10KICAgICAgICBpZiAnZmFpbGVkJyBpbiBhYnJpZGdlZF9yZXN1bHQ6CiAgICAgICAg
ICAgIGRlbCBhYnJpZGdlZF9yZXN1bHRbJ2ZhaWxlZCddCiAgICAgICAgaWYgJ2NoYW5nZWQnIGluIGFi
cmlkZ2VkX3Jlc3VsdDoKICAgICAgICAgICAgZGVsIGFicmlkZ2VkX3Jlc3VsdFsnY2hhbmdlZCddCgog
ICAgICAgIGlmIGxlbihhYnJpZGdlZF9yZXN1bHQpID4gMDoKICAgICAgICAgICAgcmV0dXJuIGpzb24u
ZHVtcHMoYWJyaWRnZWRfcmVzdWx0LCBpbmRlbnQ9aW5kZW50LCBlbnN1cmVfYXNjaWk9RmFsc2UsIHNv
cnRfa2V5cz1zb3J0X2tleXMpCgogICAgICAgIHJldHVybiAnJwoKICAgIGRlZiBfZHVyYXRpb24oc2Vs
Zik6CiAgICAgICAgZW5kID0gZGF0ZXRpbWUubm93KCkKICAgICAgICB0b3RhbF9kdXJhdGlvbiA9IChl
bmQgLSBzZWxmLl90YXNrX3N0YXJ0ZWQpCiAgICAgICAgZHVyYXRpb24gPSB0b3RhbF9kdXJhdGlvbi50
b3RhbF9zZWNvbmRzKCkgKiAxMDAwCiAgICAgICAgcmV0dXJuIGR1cmF0aW9uCgogICAgZGVmIHYyX3Bs
YXlib29rX29uX3BsYXlfc3RhcnQoc2VsZiwgcGxheSk6CiAgICAgICAgc2VsZi5fcGxheSA9IHBsYXkK
ICAgICAgICBzZWxmLl9wbGF5X3N0YXJ0ZWQgPSBkYXRldGltZS5ub3coKQoKICAgICMgY29tbWFuZCBb
Y29weSBhcnRpZmFjdHNdIHN0YXJ0ZWQKICAgICMgc3Rkb3V0CiAgICAjIC4uLgogICAgIyBjb21tYW5k
IFtjb3B5IGFydGlmYWN0c10gT0svRkFJTEVEL0NIQU5HRUQKICAgICMgU1RERVJSOiAgaWYgZmFpbGVk
CiAgICAjIC4uLgogICAgIwogICAgZGVmIHYyX3BsYXlib29rX29uX3Rhc2tfc3RhcnQoc2VsZiwgdGFz
aywgaXNfY29uZGl0aW9uYWwpOgogICAgICAgIHNlbGYuX2Rpc3BsYXkudigiVEFTSyBhY3Rpb249JXMg
YXJncz0lcyIgJSAodGFzay5hY3Rpb24sIGpzb24uZHVtcHModGFzay5hcmdzLCBpbmRlbnQ9NCkpKQog
ICAgICAgIHNlbGYuX3Rhc2tfc3RhcnRlZCA9IGRhdGV0aW1lLm5vdygpCgogICAgICAgIGlmIHRhc2su
YWN0aW9uID09ICdkZWJ1Zyc6CiAgICAgICAgICAgIHJldHVybgoKICAgICAgICBpZiBzZWxmLl9wbGF5
LnN0cmF0ZWd5ICE9ICdmcmVlJzoKICAgICAgICAgICAgc2VsZi5fZGlzcGxheS5kaXNwbGF5KHNlbGYu
X3Rhc2tfaGVhZGVyKHRhc2ssICJTVEFSVCIsIHN0YXJ0PVRydWUpLCBjb2xvcj1DLkNPTE9SX0hJR0hM
SUdIVCkKCiAgICAgICAgI3NlbGYuX2Rpc3BsYXkudihqc29uLmR1bXBzKHRhc2suYXJncywgaW5kZW50
PTQpLCBDLkNPTE9SX0hJR0hMSUdIVCkKCiAgICBkZWYgdjJfcnVubmVyX29uX29rKHNlbGYsIHJlc3Vs
dCk6CiAgICAgICAgc2VsZi5fZGlzcGxheS52KCJUQVNLIGFjdGlvbj0lcyBPSyA9PiAlcyIgJSAocmVz
dWx0Ll90YXNrLmFjdGlvbiwganNvbi5kdW1wcyhyZXN1bHQuX3Jlc3VsdCwgaW5kZW50PTQpKSkKCiAg
ICAgICAgc2VsZi5fY2xlYW5fcmVzdWx0cyhyZXN1bHQuX3Jlc3VsdCwgcmVzdWx0Ll90YXNrLmFjdGlv
bikKICAgICAgICBzZWxmLl9oYW5kbGVfd2FybmluZ3MocmVzdWx0Ll9yZXN1bHQpCgogICAgICAgIHRh
c2sgPSByZXN1bHQuX3Rhc2sKCiAgICAgICAgI3NlbGYuX2Rpc3BsYXkudihqc29uLmR1bXBzKHRhc2su
YXJncywgaW5kZW50PTQpLCBDLkNPTE9SX0hJR0hMSUdIVCkKCiAgICAgICAgIyBzcGVjaWFsIGRpc3Bs
YXkgZm9yIGRlYnVnIGFjdGlvbgogICAgICAgIGlmIHRhc2suYWN0aW9uID09ICdkZWJ1Zyc6CiAgICAg
ICAgICAgIHNlbGYuX2Rpc3BsYXlfZGVidWdfbXNnKHJlc3VsdC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQp
CiAgICAgICAgIyBkaXNwbGF5IHN0ZG91dCBhbmQgc3RkZXJyIGZvciBjb21tYW5kIG1vZHVsZXMKIyAg
ICAgICAgZWxpZiB0YXNrLmFjdGlvbiBpbiBzZWxmLkZSRUVfRk9STV9NT0RVTEVTOgojICAgICAgICAg
ICAgc2VsZi5fZGlzcGxheV9jb21tYW5kX2dlbmVyaWNfbXNnKHJlc3VsdC5fdGFzaywgcmVzdWx0Ll9y
ZXN1bHQsICJTVUNDRVNTIiwgQy5DT0xPUl9PSykKICAgICAgICAjIGRpc3BsYXkgb3RoZXIgbW9kdWxl
cwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHN0YXR1cyA9IHUnT0sgJXNtcycgJSBzZWxmLl9kdXJh
dGlvbigpCiAgICAgICAgICAgIGlmICdjaGFuZ2VkJyBpbiByZXN1bHQuX3Jlc3VsdCBhbmQgcmVzdWx0
Ll9yZXN1bHRbJ2NoYW5nZWQnXToKICAgICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXlfbXNnKHJlc3Vs
dC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQsIHN0YXR1cywgQy5DT0xPUl9DSEFOR0VEKQogICAgICAgICAg
ICBlbHNlOgogICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheV9tc2cocmVzdWx0Ll90YXNrLCByZXN1
bHQuX3Jlc3VsdCwgc3RhdHVzLCBDLkNPTE9SX09LKQoKICAgIGRlZiB2Ml9ydW5uZXJfaXRlbV9vbl9v
ayhzZWxmLCByZXN1bHQpOgogICAgICAgIHNlbGYuX2Rpc3BsYXkudigiVEFTSyBhY3Rpb249JXMgaXRl
bSBPSyA9PiAlcyIgJSAocmVzdWx0Ll90YXNrLmFjdGlvbiwganNvbi5kdW1wcyhyZXN1bHQuX3Jlc3Vs
dCwgaW5kZW50PTQpKSkKCiAgICAgICAgc2VsZi5fY2xlYW5fcmVzdWx0cyhyZXN1bHQuX3Jlc3VsdCwg
cmVzdWx0Ll90YXNrLmFjdGlvbikKICAgICAgICBzZWxmLl9oYW5kbGVfd2FybmluZ3MocmVzdWx0Ll9y
ZXN1bHQpCgogICAgICAgIHRhc2sgPSByZXN1bHQuX3Rhc2sKCiAgICAgICAgI3NlbGYuX2Rpc3BsYXku
dihqc29uLmR1bXBzKHRhc2suYXJncywgaW5kZW50PTQpLCBDLkNPTE9SX0hJR0hMSUdIVCkKCiAgICAg
ICAgIyBzcGVjaWFsIGRpc3BsYXkgZm9yIGRlYnVnIGFjdGlvbgogICAgICAgIGlmIHRhc2suYWN0aW9u
ID09ICdkZWJ1Zyc6CiAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXlfZGVidWdfbXNnKHJlc3VsdC5fdGFz
aywgcmVzdWx0Ll9yZXN1bHQpCiAgICAgICAgIyBkaXNwbGF5IHN0ZG91dCBhbmQgc3RkZXJyIGZvciBj
b21tYW5kIG1vZHVsZXMKIyAgICAgICAgZWxpZiB0YXNrLmFjdGlvbiBpbiBzZWxmLkZSRUVfRk9STV9N
T0RVTEVTOgojICAgICAgICAgICAgc2VsZi5fZGlzcGxheV9jb21tYW5kX2dlbmVyaWNfbXNnKHJlc3Vs
dC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQsICJTVUNDRVNTIiwgQy5DT0xPUl9PSykKICAgICAgICAjIGRp
c3BsYXkgb3RoZXIgbW9kdWxlcwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGlmICdjaGFuZ2VkJyBp
biByZXN1bHQuX3Jlc3VsdCBhbmQgcmVzdWx0Ll9yZXN1bHRbJ2NoYW5nZWQnXToKICAgICAgICAgICAg
ICAgIHNlbGYuX2Rpc3BsYXlfbXNnKHJlc3VsdC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQsICJPSyIsIEMu
Q09MT1JfQ0hBTkdFRCkKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHNlbGYuX2Rpc3Bs
YXlfbXNnKHJlc3VsdC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQsICJPSyIsIEMuQ09MT1JfT0spCgogICAg
ZGVmIHYyX3J1bm5lcl9vbl9mYWlsZWQoc2VsZiwgcmVzdWx0LCBpZ25vcmVfZXJyb3JzPUZhbHNlKToK
ICAgICAgICBzZWxmLl9kaXNwbGF5LnYoIlRBU0sgYWN0aW9uPSVzIEZBSUxFRCA9PiAlcyIgJSAocmVz
dWx0Ll90YXNrLmFjdGlvbiwganNvbi5kdW1wcyhyZXN1bHQuX3Jlc3VsdCwgaW5kZW50PTQpKSkKCiAg
ICAgICAgc2VsZi5faGFuZGxlX2V4Y2VwdGlvbihyZXN1bHQuX3Jlc3VsdCkKICAgICAgICBzZWxmLl9o
YW5kbGVfd2FybmluZ3MocmVzdWx0Ll9yZXN1bHQpCgogICAgICAgICN0YXNrID0gcmVzdWx0Ll90YXNr
CiAgICAgICAgI3NlbGYuX2Rpc3BsYXkudihqc29uLmR1bXBzKHRhc2suYXJncywgaW5kZW50PTQpLCBD
LkNPTE9SX0hJR0hMSUdIVCkKCiAgICAgICAgc3RhdHVzID0gdSdGQUlMICVzbXMnICUgc2VsZi5fZHVy
YXRpb24oKQoKICAgICAgICBzZWxmLl9kaXNwbGF5X21zZyhyZXN1bHQuX3Rhc2ssIHJlc3VsdC5fcmVz
dWx0LCBzdGF0dXMsIEMuQ09MT1JfRVJST1IpCgojICAgICAgICBpZiB0YXNrLmFjdGlvbiBpbiBzZWxm
LkZSRUVfRk9STV9NT0RVTEVTOgojICAgICAgICAgICAgc2VsZi5fZGlzcGxheV9jb21tYW5kX2dlbmVy
aWNfbXNnKHJlc3VsdC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQsICJGQUlMRUQiLCBDLkNPTE9SX0VSUk9S
KQojICAgICAgICAjZWxpZiByZXN1bHQuX3Rhc2suYWN0aW9uIGluIEMuTU9EVUxFX05PX0pTT04gYW5k
ICdtb2R1bGVfc3RkZXJyJyBub3QgaW4gcmVzdWx0Ll9yZXN1bHQ6CiMgICAgICAgICMgICAgc2VsZi5f
ZGlzcGxheS5kaXNwbGF5KHNlbGYuX2NvbW1hbmRfZ2VuZXJpY19tc2cocmVzdWx0Ll9ob3N0LmdldF9u
YW1lKCksIHJlc3VsdC5fcmVzdWx0LCAiRkFJTEVEIiksIGNvbG9yPUMuQ09MT1JfRVJST1IpCiMgICAg
ICAgIGVsc2U6CiMgICAgICAgICAgICBpZiAnbXNnJyBpbiByZXN1bHQuX3Jlc3VsdDoKIyAgICAgICAg
ICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkocmVzdWx0Ll9yZXN1bHRbJ21zZyddLCBjb2xvcj1D
LkNPTE9SX0VSUk9SKQojCiMgICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoc2VsZi5fdGFz
a19oZWFkZXIocmVzdWx0Ll90YXNrLCAiRkFJTEVEIiksIGNvbG9yPUMuQ09MT1JfRVJST1IpCiAgICAg
ICAgICAgICMgY2xlYW4gc3lzdGVtIHZhbHVlcyBmcm9tIHJlc3VsdCBhbmQgcmV0dXJuIGEganNvbgog
ICAgICAgICAgICAjZHVtcF9yZXN1bHQgPSBzZWxmLl9kdW1wX3Jlc3VsdHMocmVzdWx0Ll9yZXN1bHQs
IGluZGVudD00KQogICAgICAgICAgICAjaWYgZHVtcF9yZXN1bHQ6CiAgICAgICAgICAgICMgICAgc2Vs
Zi5fZGlzcGxheS5kaXNwbGF5KCJUYXNrIHJlc3VsdCA9PiAlcyIgJSAoc2VsZi5fZHVtcF9yZXN1bHRz
KHJlc3VsdC5fcmVzdWx0LCBpbmRlbnQ9NCkpLCBjb2xvcj1DLkNPTE9SX0VSUk9SKQoKICAgIGRlZiB2
Ml9ydW5uZXJfaXRlbV9vbl9mYWlsZWQoc2VsZiwgcmVzdWx0LCBpZ25vcmVfZXJyb3JzPUZhbHNlKToK
ICAgICAgICBzZWxmLl9kaXNwbGF5LnYoIlRBU0sgYWN0aW9uPSVzIElURU0gRkFJTEVEID0+ICVzIiAl
IChyZXN1bHQuX3Rhc2suYWN0aW9uLCBqc29uLmR1bXBzKHJlc3VsdC5fcmVzdWx0LCBpbmRlbnQ9NCkp
KQoKICAgICAgICBzZWxmLl9oYW5kbGVfZXhjZXB0aW9uKHJlc3VsdC5fcmVzdWx0KQogICAgICAgIHNl
bGYuX2hhbmRsZV93YXJuaW5ncyhyZXN1bHQuX3Jlc3VsdCkKCiAgICAgICAgI3Rhc2sgPSByZXN1bHQu
X3Rhc2sKICAgICAgICAjc2VsZi5fZGlzcGxheS52KGpzb24uZHVtcHModGFzay5hcmdzLCBpbmRlbnQ9
NCksIEMuQ09MT1JfSElHSExJR0hUKQoKICAgICAgICBzZWxmLl9kaXNwbGF5X21zZyhyZXN1bHQuX3Rh
c2ssIHJlc3VsdC5fcmVzdWx0LCAiRkFJTCIsIEMuQ09MT1JfRVJST1IpCgoKICAgIGRlZiB2Ml9ydW5u
ZXJfb25fc2tpcHBlZChzZWxmLCByZXN1bHQpOgogICAgICAgIHNlbGYuX2Rpc3BsYXkuZGlzcGxheSgi
JXMgfCBTS0lQUEVEIiAlIChyZXN1bHQuX2hvc3QuZ2V0X25hbWUoKSksIGNvbG9yPUMuQ09MT1JfU0tJ
UCkKCiAgICBkZWYgdjJfcnVubmVyX29uX3VucmVhY2hhYmxlKHNlbGYsIHJlc3VsdCk6CiAgICAgICAg
c2VsZi5fZGlzcGxheS5kaXNwbGF5KCIlcyB8IFVOUkVBQ0hBQkxFISA9PiAlcyIgJSAocmVzdWx0Ll9o
b3N0LmdldF9uYW1lKCksIHNlbGYuX2R1bXBfcmVzdWx0cyhyZXN1bHQuX3Jlc3VsdCwgaW5kZW50PTQp
KSwgY29sb3I9Qy5DT0xPUl9VTlJFQUNIQUJMRSkKCiAgICBkZWYgdjJfb25fZmlsZV9kaWZmKHNlbGYs
IHJlc3VsdCk6CiAgICAgICAgaWYgJ2RpZmYnIGluIHJlc3VsdC5fcmVzdWx0IGFuZCByZXN1bHQuX3Jl
c3VsdFsnZGlmZiddOgogICAgICAgICAgICBzZWxmLl9kaXNwbGF5LmRpc3BsYXkoc2VsZi5fZ2V0X2Rp
ZmYocmVzdWx0Ll9yZXN1bHRbJ2RpZmYnXSkpCgEAAP//igGWhWFCAAA=
`,
	},

	"/ansible/werf.py": {
		name:    "werf.py",
		local:   "ansible/werf.py",
		size:    2610,
		modtime: 1550053782,
		compressed: `
H4sIAAAAAAAA/wAyCs31IyAoYykgMjAxOCwgSXZhbiBNaWtoZXlraW4gPGl2YW4ubWlraGV5a2luQGZs
YW50LmNvbT4KIyBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wKyAoc2VlIENPUFlJTkcgb3Ig
aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4wLnR4dCkKCiMgTWFrZSBjb2RpbmcgbW9y
ZSBweXRob24zLWlzaApmcm9tIF9fZnV0dXJlX18gaW1wb3J0IChhYnNvbHV0ZV9pbXBvcnQsIGRpdmlz
aW9uLCBwcmludF9mdW5jdGlvbikKX19tZXRhY2xhc3NfXyA9IHR5cGUKCgpET0NVTUVOVEFUSU9OID0g
JycnCiAgICBjYWxsYmFjazogd2VyZgogICAgdHlwZTogc3Rkb3V0CiAgICBzaG9ydF9kZXNjcmlwdGlv
bjogbGl2ZSBvdXRwdXQgZm9yIHJhdyBhbmQgc2NyaXB0IHdpdGggd2VyZiBzcGVjaWZpYyBhZGRpdGlv
bnMKICAgIHZlcnNpb25fYWRkZWQ6ICIyLjQiCiAgICBkZXNjcmlwdGlvbjoKICAgICAgICAtIFNvbG8g
bW9kZSB3aXRoIGxpdmUgc3Rkb3V0IGZvciByYXcgYW5kIHNjcmlwdCB0YXNrcwogICAgICAgIC0gV2Vy
ZiBzcGVjaWZpYyBlcnJvciBtZXNzYWdlcwogICAgcmVxdWlyZW1lbnRzOgogICAgICAtIHNldCBhcyBz
dGRvdXQgY2FsbGJhY2sgaW4gY29uZmlndXJhdGlvbgonJycKCiNmcm9tIGFuc2libGUucGx1Z2lucy5j
YWxsYmFjay5saXZlIGltcG9ydCBDYWxsYmFja01vZHVsZSBhcyBDYWxsYmFja01vZHVsZV9saXZlCiMg
bGl2ZS5weSBtb3ZlZCB0byB3ZXJmCmZyb20gY2FsbGJhY2subGl2ZSBpbXBvcnQgQ2FsbGJhY2tNb2R1
bGUgYXMgQ2FsbGJhY2tNb2R1bGVfbGl2ZQpmcm9tIGFuc2libGUgaW1wb3J0IGNvbnN0YW50cyBhcyBD
CgppbXBvcnQgb3MKaW1wb3J0IGpzb24KCmNsYXNzIENhbGxiYWNrTW9kdWxlKENhbGxiYWNrTW9kdWxl
X2xpdmUpOgoKICAgIENBTExCQUNLX1ZFUlNJT04gPSAyLjAKICAgIENBTExCQUNLX1RZUEUgPSAnc3Rk
b3V0JwogICAgQ0FMTEJBQ0tfTkFNRSA9ICd3ZXJmJwoKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAg
ICAgICBzZWxmLnN1cGVyX3JlZiA9IHN1cGVyKENhbGxiYWNrTW9kdWxlLCBzZWxmKQogICAgICAgIHNl
bGYuc3VwZXJfcmVmLl9faW5pdF9fKCkKCiAgICBkZWYgdjJfcnVubmVyX29uX2ZhaWxlZChzZWxmLCBy
ZXN1bHQsIGlnbm9yZV9lcnJvcnM9RmFsc2UpOgogICAgICAgIHNlbGYuc3VwZXJfcmVmLnYyX3J1bm5l
cl9vbl9mYWlsZWQocmVzdWx0LCBpZ25vcmVfZXJyb3JzKQoKICAgICAgICAjIGdldCBjb25maWcgc2Vj
dGlvbnMgZnJvbSB3ZXJmCiAgICAgICAgIyB0YXNrIGNvbmZpZyB0ZXh0IGlzIGluIGEgbGFzdCB0YWcK
ICAgICAgICAjIGRvY3RleHQgaXMgaW4gYSBmaWxlIFdFUkZfRFVNUF9DT05GSUdfRE9DX1BBVEgKICAg
ICAgICBzZWxmLl9kaXNwbGF5X3dlcmZfY29uZmlnKHJlc3VsdC5fdGFzaykKCiAgICBkZWYgX3JlYWRf
ZHVtcF9jb25maWdfZG9jKHNlbGYpOgogICAgICAgICMgcmVhZCBjb250ZW50IGZyb20gZmlsZSBpbiBX
RVJGX0RVTVBfQ09ORklHX0RPQ19QQVRIIGVudgogICAgICAgIGlmICdXRVJGX0RVTVBfQ09ORklHX0RP
Q19QQVRIJyBub3QgaW4gb3MuZW52aXJvbjoKICAgICAgICAgICAgcmV0dXJuICcnCiAgICAgICAgZHVt
cF9wYXRoID0gb3MuZW52aXJvblsnV0VSRl9EVU1QX0NPTkZJR19ET0NfUEFUSCddCiAgICAgICAgcmVz
ID0gJycKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZoID0gb3BlbihkdW1wX3BhdGgsICdyJykKICAg
ICAgICAgICAgcmVzID0ganNvbi5sb2FkKGZoKSAjLnJlYWQoKQogICAgICAgICAgICBmaC5jbG9zZSgp
CiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwYXNzCgogICAgICAgIHJldHVybiByZXMKCiAgICAj
IHdlcmZfc3RhZ2VfbmFtZSBjb21tZW50ZWQgZm9yIGNvbnNpc3RlbmN5IHdpdGggd2VyZmZpbGUteW1s
IGJlaGF2aW91cgogICAgZGVmIF9kaXNwbGF5X3dlcmZfY29uZmlnKHNlbGYsIHRhc2spOgogICAgICAg
IHByaW50KCdxd2Vxd2Vxd2Vxd2UnKQogICAgICAgIHRhZ3MgPSB0YXNrLnRhZ3MKICAgICAgICBkdW1w
X2NvbmZpZ19zZWN0aW9uX2tleSA9ICcnCiAgICAgICAgI3dlcmZfc3RhZ2VfbmFtZSA9ICcnCiAgICAg
ICAgaWYgbGVuKHRhZ3MpID4gMDoKICAgICAgICAgICAgIyBzdGFnZSBuYW1lIGFwcGVuZGVkIGJlZm9y
ZSBkdW1wCiAgICAgICAgICAgICN3ZXJmX3N0YWdlX25hbWUgPSB0YWdzWy0yXQogICAgICAgICAgICAj
IGxhc3QgdGFnIGlzIGR1bXAgb2Ygc2VjdGlvbgogICAgICAgICAgICBkdW1wX2NvbmZpZ19zZWN0aW9u
X2tleSA9IHRhZ3NbLTFdCgogICAgICAgIGR1bXBfY29uZmlnID0gc2VsZi5fcmVhZF9kdW1wX2NvbmZp
Z19kb2MoKQogICAgICAgIGR1bXBfY29uZmlnX2RvYyA9IGR1bXBfY29uZmlnWydkdW1wX2NvbmZpZ19k
b2MnXQogICAgICAgIGR1bXBfY29uZmlnX3NlY3Rpb24gPSBkdW1wX2NvbmZpZ1snZHVtcF9jb25maWdf
c2VjdGlvbnMnXVtkdW1wX2NvbmZpZ19zZWN0aW9uX2tleV0KICAgICAgICBzZWxmLl9kaXNwbGF5LmRp
c3BsYXkoIlxuXG4lc1xuJXNcbiBFTi0tLS0tLS0tRCAhISEgXG5cbiIgJSAoZHVtcF9jb25maWdfc2Vj
dGlvbiwgZHVtcF9jb25maWdfZG9jKSwgY29sb3I9Qy5DT0xPUl9ERUJVRykKAQAA//9fEibMMgoAAA==
`,
	},

	"/ansible": {
		name:  "ansible",
		local: `ansible`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"ansible": {
		_escData["/ansible/crypt.py"],
		_escData["/ansible/live.py"],
		_escData["/ansible/werf.py"],
	},
}
