// Code generated by "esc -no-compress -ignore static.go -o ansible/static.go -pkg ansible ansible"; DO NOT EDIT.

package ansible

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/ansible/callback/__init__.py": {
		name:    "__init__.py",
		local:   "ansible/callback/__init__.py",
		size:    17,
		modtime: 1550214298,
		compressed: `
H4sIAAAAAAAA/wARAO7/IyBtb2R1bGUgY2FsbGJhY2sBAAD//4VLGUYRAAAA
`,
	},

	"/ansible/callback/live.py": {
		name:    "live.py",
		local:   "ansible/callback/live.py",
		size:    19726,
		modtime: 1550216561,
		compressed: `
H4sIAAAAAAAA/wAOTfGyIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KIyAoYykgMjAxMi0yMDE0LCBNaWNo
YWVsIERlSGFhbiA8bWljaGFlbC5kZWhhYW5AZ21haWwuY29tPgojIChjKSAyMDE3IEFuc2libGUgUHJv
amVjdAojIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHYzLjArIChzZWUgQ09QWUlORyBvciBodHRw
czovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC0zLjAudHh0KQoKIyBNYWtlIGNvZGluZyBtb3JlIHB5
dGhvbjMtaXNoCmZyb20gX19mdXR1cmVfXyBpbXBvcnQgKGFic29sdXRlX2ltcG9ydCwgZGl2aXNpb24s
IHByaW50X2Z1bmN0aW9uKQpfX21ldGFjbGFzc19fID0gdHlwZQoKRE9DVU1FTlRBVElPTiA9ICcnJwog
ICAgY2FsbGJhY2s6IGxpdmUKICAgIHR5cGU6IHN0ZG91dAogICAgc2hvcnRfZGVzY3JpcHRpb246IHNj
cmVlbiBvdXRwdXQgZm9yIHNvbG8gbW9kZQogICAgdmVyc2lvbl9hZGRlZDogaGlzdG9yaWNhbAogICAg
ZGVzY3JpcHRpb246CiAgICAgICAgLSBTb2xvIG1vZGUgd2l0aCBsaXZlIHN0ZG91dCBmb3IgcmF3IGFu
ZCBzY3JpcHQgdGFza3Mgd2l0aCBmYWxsYmFjayB0byBtaW5pbWFsCicnJwoKIyBUYXNrIG91dHB1dCBm
b3JtYXQ6CiMKIyDilIwgYWN0aW9uICduYW1lJyBbYWRkaXRpb25hbCBpbmZvXSBbU1RBUlRdCiMgICBz
dGRvdXQ6CiMgICAgIFN0YXJ0IGluc3RhbGxpbmcuLi4KIyAgICAgb3BlcmF0aW9uIDEgaXMgZG9uZQoj
ICAgICBvcGVyYXRpb24gMiBjb21wbGV0ZQojICAgICBhbGwgZG9uZS4KIyAgIHN0ZGVycjoKIyAgICAg
Li4uCiMgICBtc2c6IOKAlMKgaWYgbm90IGZhaWxlZCBvciBpZiBmYWlsZWQgd2l0aG91dCBvdXRwdXQK
IyAgIEV4aXQgY29kZTogMC8xLzIuLgojIOKUlCBhY3Rpb24gJ25hbWUnIFthZGRpdGlvbmFsIGluZm9d
IFtPS10vW0ZBSUxdCiMKIyBUYXNrIHdpdGggbG9vcDoKIyDilIwgYWN0aW9uICduYW1lJyBbYWRkaXRp
b25hbCBpbmZvXSBbU1RBUlRdCiMgICBzdGRvdXQ6CiMgICAgIFN0YXJ0IGluc3RhbGxpbmcuLi4KIyAg
ICAgb3BlcmF0aW9uIDEgaXMgZG9uZQojICAgICBvcGVyYXRpb24gMiBjb21wbGV0ZQojICAgICBhbGwg
ZG9uZS4KIyAgIHN0ZGVycjoKIyAgICAgLi4uCiMgICBNZXNzYWdlIChpZiBub3QgZmFpbGVkIG9yIGlm
IGZhaWxlZCB3aXRob3V0IG91dHB1dCkKIyAgIEV4aXQgY29kZTogMC8xLzIuLgojIOKXhiBhY3Rpb24g
J25hbWUnIGl0ZW0gJ2l0ZW1fdmFyX2NvbnRlbnQnIFtPS10KIyAuLi4KIyAuLi4KIyDilJQgYWN0aW9u
ICduYW1lJyBbYWRkaXRpb25hbCBpbmZvXSBbT0tdL1tGQUlMXQoKCgpmcm9tIGFuc2libGUucGx1Z2lu
cy5jYWxsYmFjayBpbXBvcnQgQ2FsbGJhY2tCYXNlCmZyb20gYW5zaWJsZSBpbXBvcnQgY29uc3RhbnRz
IGFzIEMKZnJvbSBhbnNpYmxlLnZhcnMubWFuYWdlciBpbXBvcnQgc3RyaXBfaW50ZXJuYWxfa2V5cwpm
cm9tIGFuc2libGUudXRpbHMuY29sb3IgaW1wb3J0IHN0cmluZ2MKCmltcG9ydCBpbywgc3lzCmltcG9y
dCBqc29uLCByZQpmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBJdGVyYWJsZQpmcm9tIGRhdGV0aW1lIGlt
cG9ydCBkYXRldGltZQoKCiMgVGFrZW4gZnJvbSBEc3RhdApjbGFzcyB2dDEwMDoKICAgIGJsYWNrID0g
J1wwMzNbMDszMG0nCiAgICBkYXJrcmVkID0gJ1wwMzNbMDszMW0nCiAgICBkYXJrZ3JlZW4gPSAnXDAz
M1swOzMybScKICAgIGRhcmt5ZWxsb3cgPSAnXDAzM1swOzMzbScKICAgIGRhcmtibHVlID0gJ1wwMzNb
MDszNG0nCiAgICBkYXJrbWFnZW50YSA9ICdcMDMzWzA7MzVtJwogICAgZGFya2N5YW4gPSAnXDAzM1sw
OzM2bScKICAgIGdyYXkgPSAnXDAzM1swOzM3bScKCiAgICBkYXJrZ3JheSA9ICdcMDMzWzE7MzBtJwog
ICAgcmVkID0gJ1wwMzNbMTszMW0nCiAgICBncmVlbiA9ICdcMDMzWzE7MzJtJwogICAgeWVsbG93ID0g
J1wwMzNbMTszM20nCiAgICBibHVlID0gJ1wwMzNbMTszNG0nCiAgICBtYWdlbnRhID0gJ1wwMzNbMTsz
NW0nCiAgICBjeWFuID0gJ1wwMzNbMTszNm0nCiAgICB3aGl0ZSA9ICdcMDMzWzE7MzdtJwoKICAgIGJs
YWNrYmcgPSAnXDAzM1s0MG0nCiAgICByZWRiZyA9ICdcMDMzWzQxbScKICAgIGdyZWVuYmcgPSAnXDAz
M1s0Mm0nCiAgICB5ZWxsb3diZyA9ICdcMDMzWzQzbScKICAgIGJsdWViZyA9ICdcMDMzWzQ0bScKICAg
IG1hZ2VudGFiZyA9ICdcMDMzWzQ1bScKICAgIGN5YW5iZyA9ICdcMDMzWzQ2bScKICAgIHdoaXRlYmcg
PSAnXDAzM1s0N20nCgogICAgcmVzZXQgPSAnXDAzM1swOzBtJwogICAgYm9sZCA9ICdcMDMzWzFtJwog
ICAgcmV2ZXJzZSA9ICdcMDMzWzJtJwogICAgdW5kZXJsaW5lID0gJ1wwMzNbNG0nCgogICAgY2xlYXIg
PSAnXDAzM1sySicKICAgICMgICAgY2xlYXJsaW5lID0gJ1wwMzNbSycKICAgIGNsZWFybGluZSA9ICdc
MDMzWzJLJwogICAgc2F2ZSA9ICdcMDMzW3MnCiAgICByZXN0b3JlID0gJ1wwMzNbdScKICAgIHNhdmVf
YWxsID0gJ1wwMzM3JwogICAgcmVzdG9yZV9hbGwgPSAnXDAzMzgnCiAgICBsaW5ld3JhcCA9ICdcMDMz
WzdoJwogICAgbm9saW5ld3JhcCA9ICdcMDMzWzdsJwoKICAgIHVwID0gJ1wwMzNbMUEnCiAgICBkb3du
ID0gJ1wwMzNbMUInCiAgICByaWdodCA9ICdcMDMzWzFDJwogICAgbGVmdCA9ICdcMDMzWzFEJwoKCmNs
YXNzIHVTeW06CiAgICBsaWdodF9kb3duX3JpZ2h0ID0gdSfilIwnCiAgICBsaWdodF91cF9yaWdodCA9
IHUn4pSUJwogICAgbGlnaHRfdmVydGljYWwgPSB1J+KUgicKICAgIGxpZ2h0X3ZlcnRpY2FsX2FuZF9y
aWdodCA9IHUn4pScJwogICAgYmxhY2tfZGlhbW9uZCA9IHUn4peGJwoKY2xhc3MgbENvbG9yOgogICAg
Q09MT1JfT0sgPSB2dDEwMC5kYXJrZ3JlZW4KICAgIENPTE9SX0NIQU5HRUQgPSB2dDEwMC5kYXJreWVs
bG93CiAgICBDT0xPUl9FUlJPUiA9IHZ0MTAwLmRhcmtyZWQKICAgIENPTE9SX0RFQlVHID0gdnQxMDAu
ZGFya2dyYXkKCgpJTkRFTlQgPSB2dDEwMC5yZXNldCt2dDEwMC5ib2xkK3VTeW0ubGlnaHRfdmVydGlj
YWwrdnQxMDAucmVzZXQrJyAnCgpjbGFzcyBMaXZlQ2FsbGJhY2tIZWxwZXJzKENhbGxiYWNrQmFzZSk6
CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoTGl2ZUNhbGxiYWNrSGVscGVycywg
c2VsZikuX19pbml0X18oKQogICAgICAgIHNlbGYuX3N0ZG91dCA9IGlvLm9wZW4oc3lzLnN0ZG91dC5m
aWxlbm8oKSwgbW9kZT0ndycsIGVuY29kaW5nPSd1dGY4JykKCiAgICBkZWYgX3ByaW50KHNlbGYsICph
cmdzKToKICAgICAgICBzZWxmLl9zdGRvdXQud3JpdGUodScnLmpvaW4oc2VsZi5fZmxhdHRlbihhcmdz
KSkpCiAgICAgICAgc2VsZi5fc3Rkb3V0LmZsdXNoKCkKCiAgICAjIG5lc3RlZCBhcnJheXMgaW50byBm
bGF0IGFycmF5ICAgICMgYWN0aW9uKG1vZHVsZSBuYW1lKQogICAgIyBhY3Rpb24obW9kdWxlIG5hbWUp
ICd0YXNrIG5hbWUnCgogICAgZGVmIF9mbGF0dGVuKHNlbGYsIGwpOgogICAgICAgICIiIllpZWxkIGl0
ZW1zIGZyb20gYW55IG5lc3RlZCBpdGVyYWJsZSIiIgogICAgICAgIGlmIGlzaW5zdGFuY2UobCwgKHVu
aWNvZGUsIHN0ciwgYnl0ZXMpKToKICAgICAgICAgICAgeWllbGQgbAogICAgICAgICAgICByZXR1cm4K
ICAgICAgICBmb3IgeCBpbiBsOgogICAgICAgICAgICBpZiBub3QgeDoKICAgICAgICAgICAgICAgIGNv
bnRpbnVlCiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoeCwgSXRlcmFibGUpIGFuZCBub3QgaXNpbnN0
YW5jZSh4LCAodW5pY29kZSwgc3RyLCBieXRlcykpOgogICAgICAgICAgICAgICAgZm9yIHN1Yl94IGlu
IHNlbGYuX2ZsYXR0ZW4oeCk6CiAgICAgICAgICAgICAgICAgICAgeWllbGQgc3ViX3gKICAgICAgICAg
ICAgZWxzZToKICAgICAgICAgICAgICAgIHlpZWxkIHgKCiAgICAjIHN0cmluZyBtZXRob2RzCiAgICBk
ZWYgX3NxdWFzaF9jZW50ZXIoc2VsZiwgcywgbCwgcGxhY2Vob2xkZXI9Jy4uLicpOgogICAgICAgIHBs
ID0gbGVuKHBsYWNlaG9sZGVyKQogICAgICAgIGlmIGxlbihzKSA+IGw6CiAgICAgICAgICAgICMgZWRn
ZSBsZW5ndGggb2YgcyB0byBkaXNwbGF5CiAgICAgICAgICAgIHNwID0gaW50KChsIC0gcGwpLzIpCiAg
ICAgICAgICAgIHJldHVybiB1JyVzJXMlcycgJSAoc1swOnNwXSwgcGxhY2Vob2xkZXIsIHNbbGVuKHMp
LXNwLTErKGwlMik6XSkKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gcwoKICAgIGRlZiBf
c3F1YXNoX3JpZ2h0KHNlbGYsIHMsIGwsIHBsYWNlaG9sZGVyPScuLi4nKToKICAgICAgICBwbCA9IGxl
bihwbGFjZWhvbGRlcikKICAgICAgICBpZiBsZW4ocykgPiBsOgogICAgICAgICAgICByZXR1cm4gdScl
cyVzJyAlIChzWzA6bC1wbF0sIHBsYWNlaG9sZGVyKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJl
dHVybiBzCgogICAgZGVmIF9jbGVhbl9zdHIoc2VsZiwgcyk6CiAgICAgICAgcyA9IHJlLnN1YihyJ1xz
KycsIHInICcsIHMsIGZsYWdzPXJlLlVOSUNPREUpCiAgICAgICAgcmV0dXJuIHMuc3RyaXAoKQoKICAg
IGRlZiBfaW5kZW50KHNlbGYsIGluZGVudCwgcyk6CiAgICAgICAgcGFydHMgPSByZS5zcGxpdChyJyhc
biknLCBzKQogICAgICAgIHJldHVybiAnJy5qb2luKHAgaWYgcCA9PSAiXG4iIGVsc2UgJyVzJXMnICUg
KGluZGVudCwgcCkgZm9yIHAgaW4gcGFydHMpCgoKY2xhc3MgQ2FsbGJhY2tNb2R1bGUoTGl2ZUNhbGxi
YWNrSGVscGVycyk6CiAgICBDQUxMQkFDS19WRVJTSU9OID0gMi4wCiAgICBDQUxMQkFDS19UWVBFID0g
J3N0ZG91dCcKICAgIENBTExCQUNLX05BTUUgPSAnbGl2ZScKCiAgICBIRUFERVJfUExBQ0VIT0xERVIg
PSAnLi4uJwogICAgSEVBREVSX05BTUVfSU5GT19MRU4gPSA1NQogICAgSEVBREVSX0lORk9fTUlOX0xF
TiA9IDUgKyAzICsgNSAgIyA1IGxldHRlcnMgZnJvbSB0aGUgZWRnZXMgYW5kIGEgcGxhY2Vob2xkZXIg
bGVuZ3RoCgogICAgIyBuYW1lIGZvciB0aGlzIHRhc2tzIGNhbiBiZSBnZW5lcmF0ZWQgZnJvbSBmcmVl
X2Zvcm0gKF9yYXdfcGFyYW1zIGFyZ3VtZW50KQogICAgRlJFRV9GT1JNX01PRFVMRVMgPSAoJ3Jhdycs
ICdzY3JpcHQnLCAnY29tbWFuZCcsICdzaGVsbCcsICdtZXRhJykKCiAgICAjIE1vZHVsZXMgdGhhdCBh
cmUgb3B0aW1pemVkIGJ5IHNxdWFzaGluZyBsb29wIGl0ZW1zIGludG8gYSBzaW5nbGUgY2FsbCB0bwog
ICAgIyB0aGUgbW9kdWxlLCBtb3N0bHkgcGFja2FnaW5nIG1vZHVsZXMgd2l0aCBuYW1lIGFyZ3VtZW50
CiAgICAjIChhcHQsIGFwaywgZG5mLCBob21lYnJldywgb3BlbmJzZF9wa2csIHBhY21hbiwgcGtnbmcs
IHl1bSwgenlwcGVyKQogICAgU1FVQVNIX0xPT1BfTU9EVUxFUyA9IGZyb3plbnNldChDLkRFRkFVTFRf
U1FVQVNIX0FDVElPTlMpCgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKENhbGxi
YWNrTW9kdWxlLCBzZWxmKS5fX2luaXRfXygpCiAgICAgICAgc2VsZi5fcGxheSA9IE5vbmUKICAgICAg
ICAjIHRpbWVzdGFtcHMgZm9yIGR1cmF0aW9uCiAgICAgICAgc2VsZi5fdGFza19zdGFydGVkPU5vbmUK
ICAgICAgICBzZWxmLl9wbGF5X3N0YXJ0ZWQ9Tm9uZQogICAgICAgIHNlbGYuX2l0ZW1fZG9uZT1Ob25l
CgogICAgIyBoZWFkZXIgZm9ybWF0IGlzOgogICAgIyBhY3Rpb24gJ3Rhc2sgbmFtZScgW3NpZ25pZmlj
YW50IGFyZ3MgaW5mb10KICAgICMgaWYgdGFzayBuYW1lIGxlbmd0aCBleGNlZWQgaXRzIG1heGltdW0g
dGhlbiBmb3JtYXQgaXM6CiAgICAjIGFjdGlvbiAndGFzayBuYW1lJwogICAgIyBpZiBubyB0YXNrIG5h
bWU6CiAgICAjIGFjdGlvbiBbc2lnbmlmaWNhbnQgYXJncyBpbmZvXQogICAgIyB0YXNrIG5hbWUgYW5k
IHNpZ25pZmljYW50IGFyZ3MgaW5mbyBhcmUgc3F1YXNoZWQgdG8gZml0IGludG8gYXZhaWxhYmxlIHNw
YWNlCiAgICBkZWYgX3Rhc2tfZGV0YWlscyhzZWxmLCB0YXNrLCBzdGFydD1GYWxzZSk6CiAgICAgICAg
dGFza19uYW1lID0gc2VsZi5fY2xlYW5fc3RyKHRhc2submFtZSkKICAgICAgICBpbmZvID0gc2VsZi5f
Z2V0X3Rhc2tfaW5mb19mcm9tX2FyZ3ModGFzaywgc3RhcnQpIG9yICcnCgogICAgICAgIGlmIGluZm8g
IT0gJyc6CiAgICAgICAgICAgIGluZm9fc3BhY2UgPSBzZWxmLkhFQURFUl9OQU1FX0lORk9fTEVOIC0g
bGVuKHRhc2tfbmFtZSkKICAgICAgICAgICAgaWYgaW5mb19zcGFjZSA+PSBzZWxmLkhFQURFUl9JTkZP
X01JTl9MRU4gb3IgaW5mb19zcGFjZSA+PSBsZW4oaW5mbyk6CiAgICAgICAgICAgICAgICBpbmZvID0g
JyBbJXNdJyAlIHNlbGYuX3NxdWFzaF9jZW50ZXIoaW5mbywgaW5mb19zcGFjZS0zKQogICAgICAgICAg
ICBlbHNlOgogICAgICAgICAgICAgICAgaW5mbyA9ICcnCgogICAgICAgIGlmIHRhc2tfbmFtZSAhPSAn
JzoKICAgICAgICAgICAgaWYgbGVuKHRhc2tfbmFtZSkrbGVuKGluZm8pID4gc2VsZi5IRUFERVJfTkFN
RV9JTkZPX0xFTjoKICAgICAgICAgICAgICAgIHRhc2tfbmFtZSA9IHNlbGYuX3NxdWFzaF9yaWdodCh0
YXNrX25hbWUsIHNlbGYuSEVBREVSX05BTUVfSU5GT19MRU4tbGVuKGluZm8pKQogICAgICAgICAgICB0
YXNrX25hbWUgPSAiICclcyciICUgdGFza19uYW1lCgogICAgICAgIHJldHVybiB1JyVzJXMlcycgJSAo
dGFzay5hY3Rpb24sIHRhc2tfbmFtZSwgaW5mbykKCiAgICAjIGl0ZW0gZGV0YWlscyBmb3JtYXQgaXM6
CiAgICAjIGFjdGlvbiAndGFzayBuYW1lJyBpdGVtICdpdGVtX25hbWUnCiAgICAjIGlmIG5vIHRhc2tf
bmFtZToKICAgICMgYWN0aW9uIGl0ZW0gJ2l0ZW1fbmFtZScKICAgICMgdGFza19uYW1lIGFuZCBpdGVt
X25hbWUgYXJlIHNxdWFzaGVkIGlmIGNhbm5vdCBmaXQgaW50byBhdmFpbGFibGUgc3BhY2UKICAgIGRl
ZiBfaXRlbV9kZXRhaWxzKHNlbGYsIHRhc2ssIGl0ZW1fbmFtZSk6CiAgICAgICAgdGFza19uYW1lID0g
c2VsZi5fY2xlYW5fc3RyKHRhc2submFtZSkKICAgICAgICBpdGVtX25hbWUgPSBzZWxmLl9jbGVhbl9z
dHIoaXRlbV9uYW1lKQoKICAgICAgICBpZiB0YXNrX25hbWUgIT0gJyc6CiAgICAgICAgICAgIHRhc2tf
c3BhY2UgPSBzZWxmLkhFQURFUl9OQU1FX0lORk9fTEVOIC0gbGVuKGl0ZW1fbmFtZSkKICAgICAgICAg
ICAgaWYgdGFza19zcGFjZSA+PSBzZWxmLkhFQURFUl9JTkZPX01JTl9MRU4gb3IgdGFza19zcGFjZSA+
PSBsZW4odGFza19uYW1lKToKICAgICAgICAgICAgICAgIHRhc2tfbmFtZSA9IHNlbGYuX3NxdWFzaF9y
aWdodCh0YXNrX25hbWUsIHRhc2tfc3BhY2UgLSAzKQogICAgICAgICAgICAgICAgdGFza19uYW1lID0g
IiAnJXMnIiAlIHRhc2tfbmFtZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgdGFza19u
YW1lID0gJycKCiAgICAgICAgaWYgaXRlbV9uYW1lICE9ICcnOgogICAgICAgICAgICBpZiBsZW4odGFz
a19uYW1lKStsZW4oaXRlbV9uYW1lKSA+IHNlbGYuSEVBREVSX05BTUVfSU5GT19MRU46CiAgICAgICAg
ICAgICAgICBpdGVtX25hbWUgPSBzZWxmLl9zcXVhc2hfcmlnaHQoaXRlbV9uYW1lLCBzZWxmLkhFQURF
Ul9OQU1FX0lORk9fTEVOLWxlbih0YXNrX25hbWUpKQogICAgICAgICAgICBpdGVtX25hbWUgPSAiIGl0
ZW0gJyVzJyIgJSAoaXRlbV9uYW1lKQoKICAgICAgICByZXR1cm4gdSclcyVzJXMnICUgKHRhc2suYWN0
aW9uLCB0YXNrX25hbWUsIGl0ZW1fbmFtZSkKCiAgICAjIFJldHVybiBjb250ZW50IGZyb20gc2lnbmlm
aWNhbnQgYXJndW1lbnRzIGZvciB3ZWxsIGtub3duIG1vZHVsZXMKICAgICMgQWxzbyBzdXBwb3J0IGl0
ZW1zIGZvciB0aGUgbG9vcHMuCiAgICBkZWYgX2dldF90YXNrX2luZm9fZnJvbV9hcmdzKHNlbGYsIHRh
c2ssIHN0YXJ0PUZhbHNlKToKICAgICAgICBpbmZvID0gJycKICAgICAgICBpZiB0YXNrLmFjdGlvbiBp
biBzZWxmLkZSRUVfRk9STV9NT0RVTEVTOgogICAgICAgICAgICBpbmZvID0gdGFzay5hcmdzLmdldCgn
X3Jhd19wYXJhbXMnLCAnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9PSAnZmlsZSc6CiAgICAgICAg
ICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCdwYXRoJywnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9
PSAnY29weSc6CiAgICAgICAgICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCdkZXN0JywnJykKICAgICAg
ICBpZiB0YXNrLmFjdGlvbiA9PSAnZ3JvdXAnOgogICAgICAgICAgICBpbmZvID0gdGFzay5hcmdzLmdl
dCgnbmFtZScsJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ3VzZXInOgogICAgICAgICAgICBp
bmZvID0gdGFzay5hcmdzLmdldCgnbmFtZScsJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2dl
dF91cmwnOgogICAgICAgICAgICBpbmZvID0gdGFzay5hcmdzLmdldCgndXJsJywnJykKICAgICAgICBp
ZiB0YXNrLmFjdGlvbiA9PSAnZ2V0ZW50JzoKICAgICAgICAgICAgZGIgPSB0YXNrLmFyZ3MuZ2V0KCdk
YXRhYmFzZScsJycpCiAgICAgICAgICAgIGtleSA9IHRhc2suYXJncy5nZXQoJ2tleScsJycpCiAgICAg
ICAgICAgIGluZm8gPSAnJXMgJXMnICUgKGRiLCBrZXkpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0g
J2Fwayc6CiAgICAgICAgICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCduYW1lJywgJycpCiAgICAgICAg
aWYgdGFzay5hY3Rpb24gPT0gJ2FwdCc6CiAgICAgICAgICAgIGluZm8xID0gdGFzay5hcmdzLmdldCgn
bmFtZScsIE5vbmUpCiAgICAgICAgICAgIGluZm8yID0gdGFzay5hcmdzLmdldCgncGFja2FnZScsIE5v
bmUpCiAgICAgICAgICAgIGluZm8zID0gdGFzay5hcmdzLmdldCgncGtnJywgTm9uZSkKICAgICAgICAg
ICAgaW5mbyA9ICcsICcuam9pbihsaXN0KHNlbGYuX2ZsYXR0ZW4oW2luZm8xLCBpbmZvMiwgaW5mbzNd
KSkpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2FwdF9yZXBvc2l0b3J5JzoKICAgICAgICAgICAg
aW5mbyA9IHRhc2suYXJncy5nZXQoJ3JlcG8nLCAnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9PSAn
YXB0X2tleSc6CiAgICAgICAgICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCdpZCcsICcnKQogICAgICAg
IGlmIHRhc2suYWN0aW9uID09ICd1bmFyY2hpdmUnOgogICAgICAgICAgICBpbmZvID0gdGFzay5hcmdz
LmdldCgnc3JjJywgJycpCiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2xvY2FsZV9nZW4nOgogICAg
ICAgICAgICBpbmZvID0gdGFzay5hcmdzLmdldCgnbmFtZScsICcnKQogICAgICAgIGlmIHRhc2suYWN0
aW9uID09ICdsaW5laW5maWxlJzoKICAgICAgICAgICAgaW5mbyA9IHRhc2suYXJncy5nZXQoJ3BhdGgn
LCAnJykKICAgICAgICBpZiB0YXNrLmFjdGlvbiA9PSAnYmxvY2tpbmZpbGUnOgogICAgICAgICAgICBp
bmZvID0gdGFzay5hcmdzLmdldCgncGF0aCcsICcnKQogICAgICAgIGlmIHRhc2suYWN0aW9uID09ICdj
b21wb3Nlcic6CiAgICAgICAgICAgIGluZm8gPSB0YXNrLmFyZ3MuZ2V0KCdjb21tYW5kJywgJ2luc3Rh
bGwnKQoKICAgICAgICBpZiB0YXNrLmxvb3AgYW5kIHN0YXJ0OgogICAgICAgICAgICBsb29wX2FyZ3Mg
PSB0YXNrLmxvb3BfYXJncwogICAgICAgICAgICBpZiBsZW4obG9vcF9hcmdzKSA+IDA6CiAgICAgICAg
ICAgICAgICBpbmZvID0gIiclcycgb3ZlciAlcyIgJSAoaW5mbywgJywgJy5qb2luKGxvb3BfYXJncykp
CgogICAgICAgIHJldHVybiBzZWxmLl9jbGVhbl9zdHIoaW5mbykKCiAgICAjIGRpc3BsYXkgdGFzayBy
ZXN1bHQgY29udGVudCB3aXRoIGluZGVudGF0aW9uCiAgICAjIE5vcm1hbGx5IGVhY2ggaXRlbSBpcyBk
aXNwbGF5ZWQgc2VwYXJhdGVseS4gQnV0IHRoZXJlIGFyZSBzcXVhc2hlZAogICAgIyBtb2R1bGVzLCB3
aGVyZSBpdGVtcyBhcmUgc3F1YXNoZWQgaW50byBsaXN0IGFuZCB0aGUgcmVzdWx0IGlzIGluIHRoZSBm
aXJzdCAncmVzdWx0cycgaXRlbS4KICAgIGRlZiBfZGlzcGxheV9tc2coc2VsZiwgdGFzaywgcmVzdWx0
LCBjb2xvcik6CiAgICAgICAgaWYgdGFzay5hY3Rpb24gaW4gc2VsZi5TUVVBU0hfTE9PUF9NT0RVTEVT
IGFuZCAncmVzdWx0cycgaW4gcmVzdWx0OgogICAgICAgICAgICBpZiBsZW4ocmVzdWx0WydyZXN1bHRz
J10pID4gMDoKICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLl9kaXNwbGF5X21zZyh0YXNrLCByZXN1
bHRbJ3Jlc3VsdHMnXVswXSwgY29sb3IpCgogICAgICAgICMgcHJldmVudCBkdWJsaWNhdGlvbiBvZiBz
dGRvdXQgaW4gY2FzZSBvZiBsaXZlX3N0ZG91dAogICAgICAgIGlmIG5vdCByZXN1bHQuZ2V0KCdsaXZl
X3N0ZG91dCcsIEZhbHNlKToKICAgICAgICAgICAgc3Rkb3V0ID0gcmVzdWx0LmdldCgnc3Rkb3V0Jywg
Tm9uZSkKICAgICAgICAgICAgaWYgc3Rkb3V0OgogICAgICAgICAgICAgICAgc2VsZi5fcHJpbnQoSU5E
RU5ULCB2dDEwMC5ib2xkLCAic3Rkb3V0OiIsIHZ0MTAwLnJlc2V0LCAiXG4iKQogICAgICAgICAgICAg
ICAgc2VsZi5fcHJpbnQoc2VsZi5faW5kZW50KElOREVOVCsnICAnLCBzdGRvdXQpLCAiXG4iKQogICAg
ICAgICAgICBzdGRlcnIgPSByZXN1bHQuZ2V0KCdzdGRlcnInLCAnJykKICAgICAgICAgICAgaWYgc3Rk
ZXJyOgogICAgICAgICAgICAgICAgc2VsZi5fcHJpbnQoSU5ERU5ULCB2dDEwMC5ib2xkLCAic3RkZXJy
OiIsIHZ0MTAwLnJlc2V0LCAiXG4iKQogICAgICAgICAgICAgICAgc2VsZi5fcHJpbnQoc2VsZi5faW5k
ZW50KElOREVOVCsnICAnLCBzdHJpbmdjKHN0ZGVyciwgQy5DT0xPUl9FUlJPUikpLCAiXG4iKQoKICAg
ICAgICBpZiBzZWxmLl9tc2dfaXNfbmVlZGVkKHRhc2ssIHJlc3VsdCk6CiAgICAgICAgICAgIHNlbGYu
X3ByaW50KElOREVOVCwgc3RyaW5nYyhyZXN1bHRbJ21zZyddLCBjb2xvciksICJcbiIpCgogICAgICAg
IGlmICdyYycgaW4gcmVzdWx0OgogICAgICAgICAgICBleGl0Q29kZSA9IHJlc3VsdFsncmMnXQogICAg
ICAgICAgICBleGl0Q29sb3IgPSBDLkNPTE9SX09LCiAgICAgICAgICAgIGlmIGV4aXRDb2RlICE9ICcw
JyBhbmQgZXhpdENvZGUgIT0gMDoKICAgICAgICAgICAgICAgIGV4aXRDb2xvciA9IEMuQ09MT1JfRVJS
T1IKICAgICAgICAgICAgc2VsZi5fcHJpbnQoSU5ERU5ULCBzdHJpbmdjKCdleGl0IGNvZGU6ICVzJyAl
IGV4aXRDb2RlLCBleGl0Q29sb3IpLCAiXG4iKQoKICAgIGRlZiBfbXNnX2lzX25lZWRlZChzZWxmLCB0
YXNrLCByZXN1bHQpOgogICAgICAgIGlmICdtc2cnIG5vdCBpbiByZXN1bHQ6CiAgICAgICAgICAgIHJl
dHVybiBGYWxzZQogICAgICAgICMgTm8gbmVlZCB0byBkaXNwbGF5IG1zZyBmb3IgbG9vcCB0YXNrLCBi
ZWNhdXNlIGVhY2ggaXRlbSBpcyBkaXNwbGF5ZWQgc2VwYXJhdGVseS4KICAgICAgICAjIE1zZyBpcyBu
ZWVkZWQgaWYgdGhlcmUgYXJlIG5vIGl0ZW1zLgogICAgICAgIGlmICdyZXN1bHRzJyBpbiByZXN1bHQ6
CiAgICAgICAgICAgIGlmIGxlbihyZXN1bHRbJ3Jlc3VsdHMnXSkgPiAwOgogICAgICAgICAgICAgICAg
cmV0dXJuIEZhbHNlCiAgICAgICAgIyBUT0RPIG1vcmUgdmFyaWFudHMuLi4KICAgICAgICByZXR1cm4g
VHJ1ZQoKICAgIGRlZiBfZGlzcGxheV9kZWJ1Z19tc2coc2VsZiwgdGFzaywgcmVzdWx0KToKICAgICAg
ICAjaWYgKHNlbGYuX2Rpc3BsYXkudmVyYm9zaXR5ID4gMCBvciAnX2Fuc2libGVfdmVyYm9zZV9hbHdh
eXMnIGluIHJlc3VsdCkgYW5kICdfYW5zaWJsZV92ZXJib3NlX292ZXJyaWRlJyBub3QgaW4gcmVzdWx0
OgogICAgICAgIGNvbG9yID0gQy5DT0xPUl9PSwogICAgICAgIGlmIHRhc2suYXJncy5nZXQoJ21zZycp
OgogICAgICAgICAgICBzZWxmLl9wcmludChJTkRFTlQsIHZ0MTAwLmJvbGQsICJkZWJ1ZyBtc2ciLCB2
dDEwMC5yZXNldCwgIlxuIikKICAgICAgICAgICAgc2VsZi5fcHJpbnQoc2VsZi5faW5kZW50KElOREVO
VCsnICAnLCBzdHJpbmdjKHJlc3VsdC5nZXQoJ21zZycsICcnKSwgY29sb3IpKSwgIlxuIikKICAgICAg
ICBpZiB0YXNrLmFyZ3MuZ2V0KCd2YXInKToKICAgICAgICAgICAgc2VsZi5fcHJpbnQoSU5ERU5ULCB2
dDEwMC5ib2xkLAogICAgICAgICAgICAgICAgICAgICAgICAiZGVidWcgdmFyIFwnJXNcJyIgJSB0YXNr
LmFyZ3MuZ2V0KCd2YXInKSwKICAgICAgICAgICAgICAgICAgICAgICAgdnQxMDAucmVzZXQsICJcbiIp
CiAgICAgICAgICAgIHZhcl9vYmogPSByZXN1bHQuZ2V0KHRhc2suYXJncy5nZXQoJ3ZhcicpLCAnJykK
ICAgICAgICAgICAgaWYgaXNpbnN0YW5jZSh2YXJfb2JqLCBzdHIpOgogICAgICAgICAgICAgICAgaWYg
J0lTIE5PVCBERUZJTkVEJyBpbiB2YXJfb2JqOgogICAgICAgICAgICAgICAgICAgIGNvbG9yID0gQy5D
T0xPUl9FUlJPUgogICAgICAgICAgICAgICAgICAgIHBhdGggPSB0YXNrLmdldF9wYXRoKCkKICAgICAg
ICAgICAgICAgICAgICBpZiBwYXRoOgogICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9wcmludChJ
TkRFTlQsIHN0cmluZ2ModSJ0YXNrIHBhdGg6ICVzIiAlIHBhdGgsIGNvbG9yPUMuQ09MT1JfREVCVUcp
LCAiXG4iKQogICAgICAgICAgICAgICAgc2VsZi5fcHJpbnQoc2VsZi5faW5kZW50KElOREVOVCsnICAn
LCBzdHJpbmdjKHZhcl9vYmosIGNvbG9yKSksICJcbiIpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAg
ICAgICAgICBzZWxmLl9wcmludChzZWxmLl9pbmRlbnQoSU5ERU5UKycgICcsIHN0cmluZ2MoanNvbi5k
dW1wcyh2YXJfb2JqLCBpbmRlbnQ9NCksIGNvbG9yKSksICJcbiIpCgogICAgIyBUT0RPIHJlbW92ZSBz
dGRvdXQgaGVyZSBpZiBsaXZlX3N0ZG91dCEKICAgICMgVE9ETyBoYW5kbGUgcmVzdWx0cyBmb3IgbG9v
cGVkIHRhc2tzCiAgICBkZWYgX2R1bXBfcmVzdWx0cyhzZWxmLCByZXN1bHQsIGluZGVudD1Ob25lLCBz
b3J0X2tleXM9VHJ1ZSwga2VlcF9pbnZvY2F0aW9uPUZhbHNlKToKCiAgICAgICAgaWYgbm90IGluZGVu
dCBhbmQgKHJlc3VsdC5nZXQoJ19hbnNpYmxlX3ZlcmJvc2VfYWx3YXlzJykgb3Igc2VsZi5fZGlzcGxh
eS52ZXJib3NpdHkgPiAyKToKICAgICAgICAgICAgaW5kZW50ID0gNAoKICAgICAgICAjIEFsbCByZXN1
bHQga2V5cyBzdGF0aW5nIHdpdGggX2Fuc2libGVfIGFyZSBpbnRlcm5hbCwgc28gcmVtb3ZlIHRoZW0g
ZnJvbSB0aGUgcmVzdWx0IGJlZm9yZSB3ZSBvdXRwdXQgYW55dGhpbmcuCiAgICAgICAgYWJyaWRnZWRf
cmVzdWx0ID0gc3RyaXBfaW50ZXJuYWxfa2V5cyhyZXN1bHQpCgogICAgICAgICMgcmVtb3ZlIGludm9j
YXRpb24gdW5sZXNzIHNwZWNpZmljYWxseSB3YW50aW5nIGl0CiAgICAgICAgaWYgbm90IGtlZXBfaW52
b2NhdGlvbiBhbmQgc2VsZi5fZGlzcGxheS52ZXJib3NpdHkgPCAzIGFuZCAnaW52b2NhdGlvbicgaW4g
cmVzdWx0OgogICAgICAgICAgICBkZWwgYWJyaWRnZWRfcmVzdWx0WydpbnZvY2F0aW9uJ10KCiAgICAg
ICAgIyByZW1vdmUgZGlmZiBpbmZvcm1hdGlvbiBmcm9tIHNjcmVlbiBvdXRwdXQKICAgICAgICBpZiBz
ZWxmLl9kaXNwbGF5LnZlcmJvc2l0eSA8IDMgYW5kICdkaWZmJyBpbiByZXN1bHQ6CiAgICAgICAgICAg
IGRlbCBhYnJpZGdlZF9yZXN1bHRbJ2RpZmYnXQoKICAgICAgICAjIHJlbW92ZSBleGNlcHRpb24gZnJv
bSBzY3JlZW4gb3V0cHV0CiAgICAgICAgaWYgJ2V4Y2VwdGlvbicgaW4gYWJyaWRnZWRfcmVzdWx0Ogog
ICAgICAgICAgICBkZWwgYWJyaWRnZWRfcmVzdWx0WydleGNlcHRpb24nXQoKICAgICAgICAjIHJlbW92
ZSBtc2csIGZhaWxlZCwgY2hhbmdlZAogICAgICAgICNpZiAnbXNnJyBpbiBhYnJpZGdlZF9yZXN1bHQ6
CiAgICAgICAgIyAgICBkZWwgYWJyaWRnZWRfcmVzdWx0Wydtc2cnXQogICAgICAgIGlmICdmYWlsZWQn
IGluIGFicmlkZ2VkX3Jlc3VsdDoKICAgICAgICAgICAgZGVsIGFicmlkZ2VkX3Jlc3VsdFsnZmFpbGVk
J10KICAgICAgICBpZiAnY2hhbmdlZCcgaW4gYWJyaWRnZWRfcmVzdWx0OgogICAgICAgICAgICBkZWwg
YWJyaWRnZWRfcmVzdWx0WydjaGFuZ2VkJ10KCiAgICAgICAgaWYgbGVuKGFicmlkZ2VkX3Jlc3VsdCkg
PiAwOgogICAgICAgICAgICByZXR1cm4ganNvbi5kdW1wcyhhYnJpZGdlZF9yZXN1bHQsIGluZGVudD1p
bmRlbnQsIGVuc3VyZV9hc2NpaT1GYWxzZSwgc29ydF9rZXlzPXNvcnRfa2V5cykKCiAgICAgICAgcmV0
dXJuICcnCgogICAgZGVmIF9kdXJhdGlvbihzZWxmKToKICAgICAgICBlbmQgPSBkYXRldGltZS5ub3co
KQogICAgICAgIHRvdGFsX2R1cmF0aW9uID0gKGVuZCAtIHNlbGYuX3Rhc2tfc3RhcnRlZCkKICAgICAg
ICBkdXJhdGlvbiA9IHRvdGFsX2R1cmF0aW9uLnRvdGFsX3NlY29uZHMoKSAqIDEwMDAKICAgICAgICBy
ZXR1cm4gZHVyYXRpb24KCiAgICBkZWYgdjJfcGxheWJvb2tfb25fcGxheV9zdGFydChzZWxmLCBwbGF5
KToKICAgICAgICBzZWxmLl9wbGF5ID0gcGxheQogICAgICAgIHNlbGYuX3BsYXlfc3RhcnRlZCA9IGRh
dGV0aW1lLm5vdygpCgogICAgZGVmIHYyX3BsYXlib29rX29uX3Rhc2tfc3RhcnQoc2VsZiwgdGFzaywg
aXNfY29uZGl0aW9uYWwpOgogICAgICAgIHNlbGYuX2Rpc3BsYXkudigiVEFTSyBhY3Rpb249JXMgYXJn
cz0lcyIgJSAodGFzay5hY3Rpb24sIGpzb24uZHVtcHModGFzay5hcmdzLCBpbmRlbnQ9NCkpKQogICAg
ICAgIHNlbGYuX3Rhc2tfc3RhcnRlZCA9IGRhdGV0aW1lLm5vdygpCgogICAgICAgICNpZiB0YXNrLmFj
dGlvbiA9PSAnZGVidWcnIG9yIHNlbGYuX3BsYXkuc3RyYXRlZ3kgPT0gJ2ZyZWUnOgogICAgICAgICMg
ICAgcmV0dXJuCiAgICAgICAgaWYgc2VsZi5fcGxheS5zdHJhdGVneSA9PSAnZnJlZSc6CiAgICAgICAg
ICAgIHJldHVybgoKICAgICAgICAjIHRhc2sgaGVhZGVyIGxpbmUKICAgICAgICBzZWxmLl9wcmludCgK
ICAgICAgICAgICAgdnQxMDAucmVzZXQsIHZ0MTAwLmJvbGQsCiAgICAgICAgICAgIHVTeW0ubGlnaHRf
ZG93bl9yaWdodCwKICAgICAgICAgICAgJyAnLAogICAgICAgICAgICBzZWxmLl90YXNrX2RldGFpbHMo
dGFzaywgc3RhcnQ9VHJ1ZSksCiAgICAgICAgICAgICIgIiwKICAgICAgICAgICAgIltTVEFSVF0iLAog
ICAgICAgICAgICB2dDEwMC5yZXNldCwKICAgICAgICAgICAgIlxuIgogICAgICAgICkKCgogICAgZGVm
IHYyX3J1bm5lcl9vbl9vayhzZWxmLCByZXN1bHQpOgogICAgICAgIHNlbGYuX2Rpc3BsYXkudigiVEFT
SyBhY3Rpb249JXMgT0sgPT4gJXMiICUgKHJlc3VsdC5fdGFzay5hY3Rpb24sIGpzb24uZHVtcHMocmVz
dWx0Ll9yZXN1bHQsIGluZGVudD00KSkpCiAgICAgICAgc2VsZi5fY2xlYW5fcmVzdWx0cyhyZXN1bHQu
X3Jlc3VsdCwgcmVzdWx0Ll90YXNrLmFjdGlvbikKICAgICAgICBzZWxmLl9oYW5kbGVfd2FybmluZ3Mo
cmVzdWx0Ll9yZXN1bHQpCgogICAgICAgIHRhc2sgPSByZXN1bHQuX3Rhc2sKICAgICAgICBjb2xvciA9
IGxDb2xvci5DT0xPUl9PSwogICAgICAgIGNjb2xvciA9IEMuQ09MT1JfT0sKICAgICAgICBpZiAnY2hh
bmdlZCcgaW4gcmVzdWx0Ll9yZXN1bHQgYW5kIHJlc3VsdC5fcmVzdWx0WydjaGFuZ2VkJ106CiAgICAg
ICAgICAgIGNvbG9yID0gbENvbG9yLkNPTE9SX0NIQU5HRUQKICAgICAgICAgICAgY2NvbG9yID0gQy5D
T0xPUl9DSEFOR0VECgogICAgICAgICMgdGFzayByZXN1bHQgaW5mbyBpZiBhbnkKICAgICAgICBpZiB0
YXNrLmFjdGlvbiA9PSAnZGVidWcnOgogICAgICAgICAgICBzZWxmLl9kaXNwbGF5X2RlYnVnX21zZyhy
ZXN1bHQuX3Rhc2ssIHJlc3VsdC5fcmVzdWx0KQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYu
X2Rpc3BsYXlfbXNnKHJlc3VsdC5fdGFzaywgcmVzdWx0Ll9yZXN1bHQsIGNjb2xvcikKCiAgICAgICAg
IyB0YXNrIGZvb3RlciBsaW5lCiAgICAgICAgc3RhdHVzID0gdSdbT0tdICVzbXMnICUgc2VsZi5fZHVy
YXRpb24oKQogICAgICAgIHNlbGYuX3ByaW50KAogICAgICAgICAgICB2dDEwMC5yZXNldCwgdnQxMDAu
Ym9sZCwKICAgICAgICAgICAgdVN5bS5saWdodF91cF9yaWdodCwKICAgICAgICAgICAgJyAnLAogICAg
ICAgICAgICBzZWxmLl90YXNrX2RldGFpbHModGFzaywgc3RhcnQ9VHJ1ZSksIHZ0MTAwLnJlc2V0LAog
ICAgICAgICAgICAnICcsCiAgICAgICAgICAgIGNvbG9yLAogICAgICAgICAgICBzdGF0dXMsCiAgICAg
ICAgICAgIHZ0MTAwLnJlc2V0LAogICAgICAgICAgICAiXG4iCiAgICAgICAgKQoKICAgIGRlZiB2Ml9y
dW5uZXJfaXRlbV9vbl9vayhzZWxmLCByZXN1bHQpOgogICAgICAgIHNlbGYuX2Rpc3BsYXkudigiVEFT
SyBhY3Rpb249JXMgaXRlbSBPSyA9PiAlcyIgJSAocmVzdWx0Ll90YXNrLmFjdGlvbiwganNvbi5kdW1w
cyhyZXN1bHQuX3Jlc3VsdCwgaW5kZW50PTQpKSkKICAgICAgICBzZWxmLl9jbGVhbl9yZXN1bHRzKHJl
c3VsdC5fcmVzdWx0LCByZXN1bHQuX3Rhc2suYWN0aW9uKQogICAgICAgIHNlbGYuX2hhbmRsZV93YXJu
aW5ncyhyZXN1bHQuX3Jlc3VsdCkKCiAgICAgICAgdGFzayA9IHJlc3VsdC5fdGFzawogICAgICAgIGlm
IHRhc2suYWN0aW9uIGluIHNlbGYuU1FVQVNIX0xPT1BfTU9EVUxFUzoKICAgICAgICAgICAgcmV0dXJu
CiAgICAgICAgY29sb3IgPSBsQ29sb3IuQ09MT1JfT0sKICAgICAgICBjY29sb3IgPSBDLkNPTE9SX09L
CiAgICAgICAgaWYgJ2NoYW5nZWQnIGluIHJlc3VsdC5fcmVzdWx0IGFuZCByZXN1bHQuX3Jlc3VsdFsn
Y2hhbmdlZCddOgogICAgICAgICAgICBjb2xvciA9IGxDb2xvci5DT0xPUl9DSEFOR0VECiAgICAgICAg
ICAgIGNjb2xvciA9IEMuQ09MT1JfQ0hBTkdFRAoKICAgICAgICAjIGl0ZW0gcmVzdWx0IGluZm8gaWYg
YW55CiAgICAgICAgaWYgdGFzay5hY3Rpb24gPT0gJ2RlYnVnJzoKICAgICAgICAgICAgc2VsZi5fZGlz
cGxheV9kZWJ1Z19tc2cocmVzdWx0Ll90YXNrLCByZXN1bHQuX3Jlc3VsdCkKICAgICAgICBlbHNlOgog
ICAgICAgICAgICBzZWxmLl9kaXNwbGF5X21zZyhyZXN1bHQuX3Rhc2ssIHJlc3VsdC5fcmVzdWx0LCBj
Y29sb3IpCgogICAgICAgICMgdGFzayBpdGVtIGZvb3RlciBsaW5lCiAgICAgICAgIyBUT0RPIGl0ZW0g
ZHVyYXRpb24KICAgICAgICBzdGF0dXMgPSB1J1tPS10nCiAgICAgICAgc2VsZi5fcHJpbnQoCiAgICAg
ICAgICAgIHZ0MTAwLnJlc2V0LCB2dDEwMC5ib2xkLAogICAgICAgICAgICB1U3ltLmxpZ2h0X3ZlcnRp
Y2FsX2FuZF9yaWdodCwKICAgICAgICAgICAgJyAnLAogICAgICAgICAgICBzZWxmLl9pdGVtX2RldGFp
bHModGFzaywgcmVzdWx0Ll9yZXN1bHQuZ2V0KCdpdGVtJywgJycpKSwgdnQxMDAucmVzZXQsCiAgICAg
ICAgICAgICcgJywKICAgICAgICAgICAgY29sb3IsCiAgICAgICAgICAgIHN0YXR1cywKICAgICAgICAg
ICAgdnQxMDAucmVzZXQsCiAgICAgICAgICAgICJcbiIKICAgICAgICApCgoKICAgIGRlZiB2Ml9ydW5u
ZXJfb25fZmFpbGVkKHNlbGYsIHJlc3VsdCwgaWdub3JlX2Vycm9ycz1GYWxzZSk6CiAgICAgICAgc2Vs
Zi5fZGlzcGxheS52KCJUQVNLIGFjdGlvbj0lcyBGQUlMRUQgPT4gJXMiICUgKHJlc3VsdC5fdGFzay5h
Y3Rpb24sIGpzb24uZHVtcHMocmVzdWx0Ll9yZXN1bHQsIGluZGVudD00KSkpCiAgICAgICAgc2VsZi5f
aGFuZGxlX2V4Y2VwdGlvbihyZXN1bHQuX3Jlc3VsdCkKICAgICAgICBzZWxmLl9oYW5kbGVfd2Fybmlu
Z3MocmVzdWx0Ll9yZXN1bHQpCgogICAgICAgIHRhc2sgPSByZXN1bHQuX3Rhc2sKCiAgICAgICAgIyB0
YXNrIHJlc3VsdCBpbmZvIGlmIGFueQogICAgICAgIHNlbGYuX2Rpc3BsYXlfbXNnKHRhc2ssIHJlc3Vs
dC5fcmVzdWx0LCBDLkNPTE9SX0VSUk9SKQoKICAgICAgICAjIHRhc2sgZm9vdGVyIGxpbmUKICAgICAg
ICBzdGF0dXMgPSB1J1tGQUlMXSAlc21zJyAlIHNlbGYuX2R1cmF0aW9uKCkKICAgICAgICBzZWxmLl9w
cmludCgKICAgICAgICAgICAgdnQxMDAucmVzZXQsIHZ0MTAwLmJvbGQsCiAgICAgICAgICAgIHVTeW0u
bGlnaHRfdXBfcmlnaHQsCiAgICAgICAgICAgICcgJywKICAgICAgICAgICAgc2VsZi5fdGFza19kZXRh
aWxzKHRhc2ssIHN0YXJ0PVRydWUpLAogICAgICAgICAgICB2dDEwMC5yZXNldCwKICAgICAgICAgICAg
JyAnLAogICAgICAgICAgICBsQ29sb3IuQ09MT1JfRVJST1IsCiAgICAgICAgICAgIHN0YXR1cywKICAg
ICAgICAgICAgdnQxMDAucmVzZXQsCiAgICAgICAgICAgICJcbiIKICAgICAgICApCgogICAgZGVmIHYy
X3J1bm5lcl9pdGVtX29uX2ZhaWxlZChzZWxmLCByZXN1bHQsIGlnbm9yZV9lcnJvcnM9RmFsc2UpOgog
ICAgICAgIHNlbGYuX2Rpc3BsYXkudigiVEFTSyBhY3Rpb249JXMgSVRFTSBGQUlMRUQgPT4gJXMiICUg
KHJlc3VsdC5fdGFzay5hY3Rpb24sIGpzb24uZHVtcHMocmVzdWx0Ll9yZXN1bHQsIGluZGVudD00KSkp
CiAgICAgICAgc2VsZi5faGFuZGxlX2V4Y2VwdGlvbihyZXN1bHQuX3Jlc3VsdCkKICAgICAgICBzZWxm
Ll9oYW5kbGVfd2FybmluZ3MocmVzdWx0Ll9yZXN1bHQpCiAgICAgICAgdGFzayA9IHJlc3VsdC5fdGFz
awogICAgICAgIGlmIHRhc2suYWN0aW9uIGluIHNlbGYuU1FVQVNIX0xPT1BfTU9EVUxFUzoKICAgICAg
ICAgICAgcmV0dXJuCiAgICAgICAgIyB0YXNrIGl0ZW0gcmVzdWx0IGluZm8gaWYgYW55CiAgICAgICAg
c2VsZi5fZGlzcGxheV9tc2codGFzaywgcmVzdWx0Ll9yZXN1bHQsIEMuQ09MT1JfRVJST1IpCiAgICAg
ICAgIyB0YXNrIGl0ZW0gZm9vdGVyIGxpbmUKICAgICAgICAjIFRPRE8gaXRlbSBkdXJhdGlvbgogICAg
ICAgIHN0YXR1cyA9IHUnW0ZBSUxdJwogICAgICAgIHNlbGYuX3ByaW50KAogICAgICAgICAgICB2dDEw
MC5yZXNldCwgdnQxMDAuYm9sZCwKICAgICAgICAgICAgdVN5bS5saWdodF92ZXJ0aWNhbF9hbmRfcmln
aHQsCiAgICAgICAgICAgICcgJywKICAgICAgICAgICAgc2VsZi5faXRlbV9kZXRhaWxzKHRhc2ssIHJl
c3VsdC5fcmVzdWx0LmdldCgnaXRlbScsICcnKSksIHZ0MTAwLnJlc2V0LAogICAgICAgICAgICAnICcs
CiAgICAgICAgICAgIEMuQ09MT1JfRVJST1IsCiAgICAgICAgICAgIHN0YXR1cywKICAgICAgICAgICAg
dnQxMDAucmVzZXQsCiAgICAgICAgICAgICJcbiIKICAgICAgICApCgogICAgZGVmIHYyX3J1bm5lcl9v
bl9za2lwcGVkKHNlbGYsIHJlc3VsdCk6CiAgICAgICAgc2VsZi5fcHJpbnQoc3RyaW5nYygiJXMgfCBT
S0lQUEVEIiAlIChyZXN1bHQuX2hvc3QuZ2V0X25hbWUoKSksIEMuQ09MT1JfU0tJUCksICJcbiIpCgog
ICAgZGVmIHYyX3J1bm5lcl9vbl91bnJlYWNoYWJsZShzZWxmLCByZXN1bHQpOgogICAgICAgIHNlbGYu
X3ByaW50KHN0cmluZ2MoIiVzIHwgVU5SRUFDSEFCTEUhID0+ICVzIiAlIChyZXN1bHQuX2hvc3QuZ2V0
X25hbWUoKSwgc2VsZi5fZHVtcF9yZXN1bHRzKHJlc3VsdC5fcmVzdWx0LCBpbmRlbnQ9NCkpLCBjb2xv
cj1DLkNPTE9SX1VOUkVBQ0hBQkxFKSwgIlxuIikKCiAgICBkZWYgdjJfb25fZmlsZV9kaWZmKHNlbGYs
IHJlc3VsdCk6CiAgICAgICAgaWYgJ2RpZmYnIGluIHJlc3VsdC5fcmVzdWx0IGFuZCByZXN1bHQuX3Jl
c3VsdFsnZGlmZiddOgogICAgICAgICAgICBzZWxmLl9wcmludChzZWxmLl9nZXRfZGlmZihyZXN1bHQu
X3Jlc3VsdFsnZGlmZiddKSwgIlxuIikKCiAgICBkZWYgX2hhbmRsZV9leGNlcHRpb24oc2VsZiwgcmVz
dWx0KToKICAgICAgICBpZiAnZXhjZXB0aW9uJyBpbiByZXN1bHQ6CiAgICAgICAgICAgIG1zZyA9ICJB
biBleGNlcHRpb24gb2NjdXJyZWQgZHVyaW5nIHRhc2sgZXhlY3V0aW9uLiBUaGUgZnVsbCB0cmFjZWJh
Y2sgaXM6XG4iICsgcmVzdWx0WydleGNlcHRpb24nXQogICAgICAgICAgICBkZWwgcmVzdWx0WydleGNl
cHRpb24nXQogICAgICAgICAgICBzZWxmLl9wcmludChzdHJpbmdjKG1zZywgQy5DT0xPUl9FUlJPUikp
CgEAAP//APzP8w5NAAA=
`,
	},

	"/ansible/callback/werf.py": {
		name:    "werf.py",
		local:   "ansible/callback/werf.py",
		size:    2680,
		modtime: 1550214298,
		compressed: `
H4sIAAAAAAAA/wB4Cof1IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KIyAoYykgMjAxOCwgSXZhbiBNaWto
ZXlraW4gPGl2YW4ubWlraGV5a2luQGZsYW50LmNvbT4KIyBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5z
ZSB2My4wKyAoc2VlIENPUFlJTkcgb3IgaHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4w
LnR4dCkKCiMgTWFrZSBjb2RpbmcgbW9yZSBweXRob24zLWlzaApmcm9tIF9fZnV0dXJlX18gaW1wb3J0
IChhYnNvbHV0ZV9pbXBvcnQsIGRpdmlzaW9uLCBwcmludF9mdW5jdGlvbikKX19tZXRhY2xhc3NfXyA9
IHR5cGUKCgpET0NVTUVOVEFUSU9OID0gJycnCiAgICBjYWxsYmFjazogd2VyZgogICAgdHlwZTogc3Rk
b3V0CiAgICBzaG9ydF9kZXNjcmlwdGlvbjogbGl2ZSBvdXRwdXQgZm9yIHJhdyBhbmQgc2NyaXB0IHdp
dGggd2VyZiBzcGVjaWZpYyBhZGRpdGlvbnMKICAgIHZlcnNpb25fYWRkZWQ6ICIyLjQiCiAgICBkZXNj
cmlwdGlvbjoKICAgICAgICAtIFNvbG8gbW9kZSB3aXRoIGxpdmUgc3Rkb3V0IGZvciByYXcgYW5kIHNj
cmlwdCB0YXNrcwogICAgICAgIC0gV2VyZiBzcGVjaWZpYyBlcnJvciBtZXNzYWdlcwogICAgcmVxdWly
ZW1lbnRzOgogICAgICAtIHNldCBhcyBzdGRvdXQgY2FsbGJhY2sgaW4gY29uZmlndXJhdGlvbgonJycK
CmZyb20gY2FsbGJhY2subGl2ZSBpbXBvcnQgQ2FsbGJhY2tNb2R1bGUgYXMgQ2FsbGJhY2tNb2R1bGVf
bGl2ZQpmcm9tIGNhbGxiYWNrLmxpdmUgaW1wb3J0IHZ0MTAwLCBsQ29sb3IKZnJvbSBhbnNpYmxlIGlt
cG9ydCBjb25zdGFudHMgYXMgQwpmcm9tIGFuc2libGUudXRpbHMuY29sb3IgaW1wb3J0IHN0cmluZ2MK
CmltcG9ydCBvcwppbXBvcnQganNvbgoKY2xhc3MgQ2FsbGJhY2tNb2R1bGUoQ2FsbGJhY2tNb2R1bGVf
bGl2ZSk6CgogICAgQ0FMTEJBQ0tfVkVSU0lPTiA9IDIuMAogICAgQ0FMTEJBQ0tfVFlQRSA9ICdzdGRv
dXQnCiAgICBDQUxMQkFDS19OQU1FID0gJ3dlcmYnCgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAg
ICAgIHNlbGYuc3VwZXJfcmVmID0gc3VwZXIoQ2FsbGJhY2tNb2R1bGUsIHNlbGYpCiAgICAgICAgc2Vs
Zi5zdXBlcl9yZWYuX19pbml0X18oKQoKICAgIGRlZiB2Ml9ydW5uZXJfb25fZmFpbGVkKHNlbGYsIHJl
c3VsdCwgaWdub3JlX2Vycm9ycz1GYWxzZSk6CiAgICAgICAgc2VsZi5zdXBlcl9yZWYudjJfcnVubmVy
X29uX2ZhaWxlZChyZXN1bHQsIGlnbm9yZV9lcnJvcnMpCgogICAgICAgICMgZ2V0IGNvbmZpZyBzZWN0
aW9ucyBmcm9tIHdlcmYKICAgICAgICAjIHRhc2sgY29uZmlnIHRleHQgaXMgaW4gYSBsYXN0IHRhZwog
ICAgICAgICMgZG9jdGV4dCBpcyBpbiBhIGZpbGUgV0VSRl9EVU1QX0NPTkZJR19ET0NfUEFUSAogICAg
ICAgIHNlbGYuX2Rpc3BsYXlfd2VyZl9jb25maWcocmVzdWx0Ll90YXNrKQoKICAgIGRlZiBfcmVhZF9k
dW1wX2NvbmZpZ19kb2Moc2VsZik6CiAgICAgICAgIyByZWFkIGNvbnRlbnQgZnJvbSBmaWxlIGluIFdF
UkZfRFVNUF9DT05GSUdfRE9DX1BBVEggZW52CiAgICAgICAgaWYgJ1dFUkZfRFVNUF9DT05GSUdfRE9D
X1BBVEgnIG5vdCBpbiBvcy5lbnZpcm9uOgogICAgICAgICAgICByZXR1cm4ge30KICAgICAgICBkdW1w
X3BhdGggPSBvcy5lbnZpcm9uWydXRVJGX0RVTVBfQ09ORklHX0RPQ19QQVRIJ10KICAgICAgICByZXMg
PSB7fQogICAgICAgIHRyeToKICAgICAgICAgICAgZmggPSBvcGVuKGR1bXBfcGF0aCwgJ3InKQogICAg
ICAgICAgICByZXMgPSBqc29uLmxvYWQoZmgpCiAgICAgICAgICAgIGZoLmNsb3NlKCkKICAgICAgICBl
eGNlcHQ6CiAgICAgICAgICAgIHBhc3MKCiAgICAgICAgcmV0dXJuIHJlcwoKICAgICMgd2VyZl9zdGFn
ZV9uYW1lIGNvbW1lbnRlZCBmb3IgY29uc2lzdGVuY3kgd2l0aCB3ZXJmZmlsZS15bWwgYmVoYXZpb3Vy
CiAgICBkZWYgX2Rpc3BsYXlfd2VyZl9jb25maWcoc2VsZiwgdGFzayk6CiAgICAgICAgdGFncyA9IHRh
c2sudGFncwogICAgICAgIGlmIG5vdCB0YWdzIG9yIGxlbih0YWdzKSA9PSAwOgogICAgICAgICAgICBy
ZXR1cm4KCiAgICAgICAgIyBsYXN0IHRhZyBpcyBhIGtleSB0byBhIHNlY3Rpb24gZHVtcCBpbiBkdW1w
X2NvbmZpZwogICAgICAgIGR1bXBfY29uZmlnX3NlY3Rpb25fa2V5ID0gdGFnc1stMV0KCiAgICAgICAg
ZHVtcF9jb25maWcgPSBzZWxmLl9yZWFkX2R1bXBfY29uZmlnX2RvYygpCiAgICAgICAgZHVtcF9jb25m
aWdfZG9jID0gZHVtcF9jb25maWcuZ2V0KCdkdW1wX2NvbmZpZ19kb2MnLCAnJykKICAgICAgICBkdW1w
X2NvbmZpZ19zZWN0aW9ucyA9IGR1bXBfY29uZmlnLmdldCgnZHVtcF9jb25maWdfc2VjdGlvbnMnLCB7
fSkKICAgICAgICBkdW1wX2NvbmZpZ19zZWN0aW9uID0gZHVtcF9jb25maWdfc2VjdGlvbnMuZ2V0KGR1
bXBfY29uZmlnX3NlY3Rpb25fa2V5LCAnJykKICAgICAgICBzZWxmLl9wcmludCgKICAgICAgICAgICAg
dSJcbiIsCiAgICAgICAgICAgIGxDb2xvci5DT0xPUl9ERUJVRywgdSJGYWlsZWQgdGFzayBjb25maWd1
cmF0aW9uOlxuXG4iLCB2dDEwMC5yZXNldCwKICAgICAgICAgICAgc3RyaW5nYyhkdW1wX2NvbmZpZ19z
ZWN0aW9uLCBDLkNPTE9SX0RFQlVHKSwKICAgICAgICAgICAgdSJcbiIsCiAgICAgICAgICAgIHN0cmlu
Z2MoZHVtcF9jb25maWdfZG9jLCBDLkNPTE9SX0RFQlVHKSwKICAgICAgICAgICAgdSJcbiIpCgEAAP//
2aImbHgKAAA=
`,
	},

	"/ansible/crypt.py": {
		name:    "crypt.py",
		local:   "ansible/crypt.py",
		size:    45,
		modtime: 1550056411,
		compressed: `
H4sIAAAAAAAA/wAtANL/ZGVmIGNyeXB0KHdvcmQsIHNhbHQpOgogIHJldHVybiAiRkFLRV9DUllQVCIK
AQAA///ZwIS+LQAAAA==
`,
	},

	"/ansible": {
		name:  "ansible",
		local: `ansible`,
		isDir: true,
	},

	"/ansible/callback": {
		name:  "callback",
		local: `ansible/callback`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"ansible": {
		_escData["/ansible/callback"],
		_escData["/ansible/crypt.py"],
	},

	"ansible/callback": {
		_escData["/ansible/callback/__init__.py"],
		_escData["/ansible/callback/live.py"],
		_escData["/ansible/callback/werf.py"],
	},
}
