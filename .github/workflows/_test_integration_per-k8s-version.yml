name: xxxxx(internal)

on:
  workflow_call:
    inputs:
      coverage:
        default: false
        type: string
      linuxAmd64Runner:
        default: ubuntu-22.04
        type: string

defaults:
  run:
    shell: bash

env:
  DEBIAN_FRONTEND: "noninteractive"

jobs:
  _:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ${{ inputs.linuxAmd64Runner }}
        k8s-version:
          - 1.23
          - 1.25
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Install werf build dependencies
        run: sudo apt-get install -y libbtrfs-dev

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version-file: go.mod

      - name: Install Task
        uses: arduino/setup-task@v1

      - name: Set up prebuilt werf test binary
        uses: ./.github/actions/set-up-prebuilt-werf-test-binary
        with:
          coverage: ${{ inputs.coverage }}
          coverageDirSuffix: ${{ matrix.os }}

      - name: Set up git config
        uses: ./.github/actions/set-up-git-config

      - name: Install ginkgo
        run: task -p deps:install:ginkgo

      - name: Test
        run: |
          export WERF_TEST_K8S_BASE64_KUBECONFIG="$(printenv WERF_TEST_K8S_BASE64_KUBECONFIG_$(tr . _ <<< ${{ matrix.k8s-version }}))"
          source ./scripts/ci/integration_k8s_tests_before_hook.sh
          if ${{ inputs.coverage }}; then
            task -p test:integration paths="integration/suites/cleanup_after_converge integration/suites/deploy integration/suites/helm/deploy_rollback" -- --coverprofile="$(openssl rand -hex 6)-coverage.out" --keep-going
            mv *-coverage.out "$WERF_TEST_COVERAGE_DIR/"
          else
            task -p test:integration paths="integration/suites/cleanup_after_converge integration/suites/deploy integration/suites/helm/deploy_rollback" -- --keep-going
          fi
          echo loadavg: $(cat /proc/loadavg)
        env:
          WERF_TEST_K8S_DOCKER_REGISTRY: ${{ secrets.WERF_TEST_K8S_DOCKER_REGISTRY }}
          WERF_TEST_K8S_DOCKER_REGISTRY_USERNAME: ${{ secrets.WERF_TEST_K8S_DOCKER_REGISTRY_USERNAME }}
          WERF_TEST_K8S_DOCKER_REGISTRY_PASSWORD: ${{ secrets.WERF_TEST_K8S_DOCKER_REGISTRY_PASSWORD }}

      - if: inputs.coverage == 'true'
        name: Upload coverage artifact
        uses: actions/upload-artifact@master
        with:
          name: coverage
          path: coverage
