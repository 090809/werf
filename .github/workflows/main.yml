name: Main
on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
env:
  GO111MODULE: on

jobs:

  build:
    name: Build
    strategy:
      matrix:
        platform: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Build
      run: go build -tags "dfrunmount dfssh" github.com/flant/werf/cmd/werf

  unit_tests:
    name: Unit tests
    strategy:
      matrix:
        platform: [macOS-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Test
      run: go test -tags "dfrunmount dfssh" ./...

  tests_with_coverage:
    name: All tests with coverage
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Before tests
      run: |
        export WERF_TEST_COVERAGE_DIR=$GITHUB_WORKSPACE/tests-coverage
        mkdir $WERF_TEST_COVERAGE_DIR
        ./scripts/ci/codeclimate_before_script_hook.sh

    - name: Unit tests
      run: |
        export WERF_TEST_COVERAGE_DIR=$GITHUB_WORKSPACE/tests-coverage
        go test -tags "dfrunmount dfssh" -coverpkg=./... -coverprofile=$WERF_TEST_COVERAGE_DIR/unit_tests_coverage.out ./...

    - name: Before integration tests
      run: |
        ./scripts/tests/werf_with_coverage.sh
        ./scripts/ci/bats.sh
        ./scripts/ci/git.sh
        ./scripts/ci/parallel.sh

    - name: Integration tests except k8s
      run: |
        export PATH="$GITHUB_WORKSPACE/bin/tests:$PATH"
        export WERF_TEST_COVERAGE_DIR=$GITHUB_WORKSPACE/tests-coverage
        export WERF_TEST_K8S_DISABLED=1
        bats -r $GITHUB_WORKSPACE/tests --jobs 5

    - name: Before integration k8s tests
      run: ./scripts/ci/insecure_docker_registry.sh
      env:
        WERF_TEST_K8S_INSECURE_DOCKER_REGISTRY: ${{ secrets.WERF_TEST_K8S_INSECURE_DOCKER_REGISTRY }}

    - name: Integration k8s tests
      run: |
        export PATH="$GITHUB_WORKSPACE/bin/tests:$PATH"
        export WERF_TEST_COVERAGE_DIR=$GITHUB_WORKSPACE/tests-coverage
        ./scripts/ci/integration_k8s_tests.sh 5
      env:
        WERF_TEST_K8S_INSECURE_DOCKER_REGISTRY: ${{ secrets.WERF_TEST_K8S_INSECURE_DOCKER_REGISTRY }}
#        WERF_TEST_K8S_BASE64_KUBECONFIG_1.11: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_1.11 }}
#        WERF_TEST_K8S_BASE64_KUBECONFIG_1.12: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_1.12 }}
#        WERF_TEST_K8S_BASE64_KUBECONFIG_1.13: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_1.13 }}
#        WERF_TEST_K8S_BASE64_KUBECONFIG_1.14: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_1.14 }}
#        WERF_TEST_K8S_BASE64_KUBECONFIG_1.15: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_1.15 }}
#        WERF_TEST_K8S_BASE64_KUBECONFIG_1.16: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_1.16 }}
        WERF_TEST_K8S_BASE64_KUBECONFIG_MINIKUBE: ${{ secrets.WERF_TEST_K8S_BASE64_KUBECONFIG_MINIKUBE }}

    - name: After tests
      run: |
        export WERF_TEST_COVERAGE_DIR=$GITHUB_WORKSPACE/tests-coverage
        export GIT_BRANCH=${GITHUB_REF:11}
        export GIT_COMMIT_SHA=$GITHUB_SHA
        ./scripts/ci/codeclimate_after_script_hook.sh
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
